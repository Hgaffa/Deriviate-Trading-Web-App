{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\reports.js\";\nimport React from \"react\";\nimport ReportPDF from \"./components/reportpdf\";\nvar RangePicker = _DatePicker.RangePicker;\n\nvar Reports =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Reports, _React$Component);\n\n  function Reports() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reports);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reports)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      list: [\"2010-06-24\", \"2020-01-02\"],\n      dataSource: [{\n        key: \"1\",\n        file: \"2020-01-09.csv\"\n      }, {\n        key: \"2\",\n        file: \"2020-01-08.csv\"\n      }],\n      columns: [{\n        title: \"File\",\n        dataIndex: \"file\",\n        key: \"file\"\n      }, {\n        title: \"\",\n        key: \"actions\",\n        width: 100,\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"/pdf\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, \" \", React.createElement(_Icon, {\n            type: \"download\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }), \" Download\"));\n        }\n      }],\n      dateString: \"\"\n    };\n\n    _this.onChange = function (date, dateString) {\n      _this.setState({\n        dateString: dateString\n      });\n    };\n\n    _this.handleGenerateToday = function (e) {\n      var now = new Date();\n      console.log(\"Generate pdf for \".concat(now.toLocaleDateString(\"zh-CN\"), \" \").concat(now.toLocaleTimeString()));\n    };\n\n    _this.handleGenerateRange = function (e) {\n      console.log(\"Generate pdf for range \".concat(_this.state.dateString));\n    };\n\n    return _this;\n  }\n\n  _createClass(Reports, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n        style: {\n          margin: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Generate reports:\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Generate report of all trades made today: \"), React.createElement(_Button, {\n        htmlType: \"submit\",\n        style: {\n          marginLeft: 8\n        },\n        type: \"primary\",\n        onClick: this.handleGenerateToday,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Generate\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \"Generate report between specific dates:\", \" \", React.createElement(RangePicker, {\n        style: {\n          marginLeft: 8\n        },\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        style: {\n          marginLeft: 8\n        },\n        type: \"primary\",\n        onClick: this.handleGenerateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Generate\"), React.createElement(\"h1\", {\n        style: {\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Previous Reports\"), React.createElement(_List, {\n        itemLayout: \"vertical\",\n        dataSource: this.state.list,\n        renderItem: function renderItem(item) {\n          return React.createElement(_List.Item, {\n            extra: React.createElement(ReportPDF, {\n              date: item,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87\n            },\n            __self: this\n          }, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(_Table, {\n        dataSource: this.state.dataSource,\n        columns: this.state.columns,\n        size: \"middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Reports;\n}(React.Component);\n\nexport default Reports;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/reports.js"],"names":["React","ReportPDF","RangePicker","Reports","state","list","dataSource","key","file","columns","title","dataIndex","width","render","text","record","dateString","onChange","date","setState","handleGenerateToday","e","now","Date","console","log","toLocaleDateString","toLocaleTimeString","handleGenerateRange","margin","marginLeft","textAlign","item","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { List, Table, Icon, Button, DatePicker } from \"antd\";\r\nimport ReportPDF from \"./components/reportpdf\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nclass Reports extends React.Component {\r\n  state = {\r\n    list: [\"2010-06-24\", \"2020-01-02\"],\r\n    dataSource: [\r\n      {\r\n        key: \"1\",\r\n        file: \"2020-01-09.csv\"\r\n      },\r\n      {\r\n        key: \"2\",\r\n        file: \"2020-01-08.csv\"\r\n      }\r\n    ],\r\n    columns: [\r\n      {\r\n        title: \"File\",\r\n        dataIndex: \"file\",\r\n        key: \"file\"\r\n      },\r\n      {\r\n        title: \"\",\r\n        key: \"actions\",\r\n        width: 100,\r\n        render: (text, record) => (\r\n          <span>\r\n            <a href=\"/pdf\">\r\n              {\" \"}\r\n              <Icon type=\"download\" /> Download\r\n            </a>\r\n          </span>\r\n        )\r\n      }\r\n    ],\r\n    dateString: \"\"\r\n  };\r\n  onChange = (date, dateString) => {\r\n    this.setState({\r\n      dateString: dateString\r\n    });\r\n  };\r\n  handleGenerateToday = e => {\r\n    var now = new Date();\r\n    console.log(\r\n      `Generate pdf for ${now.toLocaleDateString(\r\n        \"zh-CN\"\r\n      )} ${now.toLocaleTimeString()}`\r\n    );\r\n  };\r\n  handleGenerateRange = e => {\r\n    console.log(`Generate pdf for range ${this.state.dateString}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <section style={{ margin: 20 }}>\r\n          <h2>Generate reports:</h2>\r\n          <span>Generate report of all trades made today: </span>\r\n          <Button\r\n            htmlType=\"submit\"\r\n            style={{ marginLeft: 8 }}\r\n            type=\"primary\"\r\n            onClick={this.handleGenerateToday}\r\n          >\r\n            Generate\r\n          </Button>\r\n          <br />\r\n          <br />\r\n          Generate report between specific dates:{\" \"}\r\n          <RangePicker style={{ marginLeft: 8 }} onChange={this.onChange} />\r\n          <Button\r\n            style={{ marginLeft: 8 }}\r\n            type=\"primary\"\r\n            onClick={this.handleGenerateRange}\r\n          >\r\n            Generate\r\n          </Button>\r\n          <h1 style={{ textAlign: \"left\" }}>Previous Reports</h1>\r\n          <List\r\n            itemLayout=\"vertical\"\r\n            dataSource={this.state.list}\r\n            renderItem={item => <List.Item extra={<ReportPDF date={item}/>}>{item}</List.Item>}\r\n          />\r\n          <Table\r\n            dataSource={this.state.dataSource}\r\n            columns={this.state.columns}\r\n            size=\"middle\"\r\n          />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reports;\r\n"]},"metadata":{},"sourceType":"module"}