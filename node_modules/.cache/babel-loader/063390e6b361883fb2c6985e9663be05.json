{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _slicedToArray from \"/Users/nick/Documents/derivatives/git_deriv/derivatives/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/nick/Documents/derivatives/git_deriv/derivatives/src/newmodaltrade.js\";\nimport React, { useState, useCallback } from 'react';\nimport FormBuilder from 'antd-form-builder';\nexport default _Form.create()(function (_ref) {\n  var form = _ref.form;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var showModal = useCallback(function () {\n    return setModalVisible(true);\n  }, [setModalVisible]);\n  var hideModal = useCallback(function () {\n    return setModalVisible(false);\n  }, [setModalVisible]);\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pending = _useState4[0],\n      setPending = _useState4[1];\n\n  var handleSubmit = useCallback(function (evt) {\n    evt.preventDefault();\n    form.validateFields(function (err, values) {\n      if (err) return;\n      setPending(true);\n      console.log('submit: ', values);\n      setTimeout(function () {\n        setPending(false);\n\n        _Modal.success({\n          title: 'Success',\n          content: 'Submit success.',\n          onOk: hideModal\n        });\n      }, 2000);\n    });\n  }, [form, setPending, hideModal]);\n  var meta = {\n    disabled: pending,\n    fields: [{\n      key: 'name',\n      label: 'Name',\n      required: true\n    }, {\n      key: 'desc',\n      label: 'Description'\n    }]\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    type: \"primary\",\n    onClick: showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Modal\"), React.createElement(_Modal, {\n    title: \"New trade MODAL\",\n    closable: !pending,\n    maskClosable: !pending,\n    visible: modalVisible,\n    destroyOnClose: true,\n    onOk: handleSubmit,\n    onCancel: hideModal,\n    okText: pending ? 'Loading...' : 'Ok',\n    okButtonProps: {\n      loading: pending,\n      disabled: pending\n    },\n    cancelButtonProps: {\n      disabled: pending\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(_Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormBuilder, {\n    meta: meta,\n    form: form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))));\n});","map":{"version":3,"sources":["/Users/nick/Documents/derivatives/git_deriv/derivatives/src/newmodaltrade.js"],"names":["React","useState","useCallback","FormBuilder","create","form","modalVisible","setModalVisible","showModal","hideModal","pending","setPending","handleSubmit","evt","preventDefault","validateFields","err","values","console","log","setTimeout","success","title","content","onOk","meta","disabled","fields","key","label","required","loading"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { Form, Button, Modal } from 'antd'\nimport FormBuilder from 'antd-form-builder'\n\nexport default Form.create()(({ form }) => {\n  const [modalVisible, setModalVisible] = useState(false)\n  const showModal = useCallback(() => setModalVisible(true), [setModalVisible])\n  const hideModal = useCallback(() => setModalVisible(false), [setModalVisible])\n  const [pending, setPending] = useState(false)\n  const handleSubmit = useCallback(\n    evt => {\n      evt.preventDefault()\n      form.validateFields((err, values) => {\n        if (err) return\n        setPending(true)\n        console.log('submit: ', values)\n        setTimeout(() => {\n          setPending(false)\n          Modal.success({ title: 'Success', content: 'Submit success.', onOk: hideModal })\n        }, 2000)\n      })\n    },\n    [form, setPending, hideModal],\n  )\n\n  const meta = {\n    disabled: pending,\n    fields: [{ key: 'name', label: 'Name', required: true }, { key: 'desc', label: 'Description' }],\n  }\n\n  return (\n    <div>\n      <Button type=\"primary\" onClick={showModal}>\n        Modal\n      </Button>\n      <Modal\n        title=\"New trade MODAL\"\n        closable={!pending}\n        maskClosable={!pending}\n        visible={modalVisible}\n        destroyOnClose\n        onOk={handleSubmit}\n        onCancel={hideModal}\n        okText={pending ? 'Loading...' : 'Ok'}\n        okButtonProps={{ loading: pending, disabled: pending }}\n        cancelButtonProps={{ disabled: pending }}\n      >\n        <Form onSubmit={handleSubmit}>\n          <FormBuilder meta={meta} form={form} />\n        </Form>\n      </Modal>\n    </div>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}