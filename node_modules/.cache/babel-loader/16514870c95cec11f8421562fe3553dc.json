{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\components\\\\reportpdf.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport ReportGenerate from \"./reportgenerate\";\nimport { Link } from \"react-router-dom\";\nvar Title = _Typography.Title;\n\nvar ReportPDF =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportPDF, _React$Component);\n\n  function ReportPDF() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReportPDF);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReportPDF)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      button: true,\n      now: new Date(),\n      date: _this.props.date,\n      data: [],\n      trades: [{\n        tradeid: \"1\",\n        buyer: \"John\",\n        seller: \"Sam\",\n        product: \"Stool\",\n        quantity: \"12\",\n        notionalcurrency: \"USD\",\n        underlyingcurrency: \"GBP\",\n        strikeprice: \"11\",\n        marketvalue: \"120\",\n        notionalvalue: \"13\",\n        date: \"2012-06-05\",\n        time: \"15:32:15\",\n        tags: \"A\"\n      }, {\n        tradeid: \"2\",\n        buyer: \"Harry\",\n        seller: \"Jamil\",\n        product: \"Plyers\",\n        quantity: \"123\",\n        notionalcurrency: \"GBP\",\n        underlyingcurrency: \"USD\",\n        strikeprice: \"43\",\n        marketvalue: \"23\",\n        notionalvalue: \"56\",\n        date: \"2014-05-21\",\n        time: \"15:12:14\",\n        tags: \"B\"\n      }, {\n        tradeid: \"3\",\n        buyer: \"Abdiaziz\",\n        seller: \"Bidhan\",\n        product: \"Screwdriver\",\n        quantity: \"24\",\n        notionalcurrency: \"GBP\",\n        underlyingcurrency: \"USD\",\n        strikeprice: \"1532\",\n        marketvalue: \"231\",\n        notionalvalue: \"234\",\n        date: \"2013-05-21\",\n        time: \"15:14:14\",\n        tags: \"C\"\n      }]\n    };\n\n    _this.onDownload = function (e) {\n      _this.setState({\n        button: false\n      });\n\n      console.log(\"Report downloaded for \".concat(_this.state.date));\n    };\n\n    return _this;\n  }\n\n  _createClass(ReportPDF, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var now = this.state.now.getTime();\n      console.log(\"date format for now is \".concat(now));\n      var fixedDate = new Date(this.state.trades[2].date).getTime();\n      console.log(\"date format for trade is \".concat(fixedDate)); // active editable is meant to be for trades added today right?\n      // I don't think we have data for these trades - maybe we have to filter it by\n      // the trades available on the portfolio page ?\n\n      var i;\n\n      for (i = 0; i < this.state.trades.length; i++) {\n        var expiry = new Date(this.state.trades[i].date).getTime();\n\n        if (expiry <= now) {\n          this.state.trades[i].tags = \"Inactive\";\n        } else {\n          this.state.trades[i].tags = \"Active\";\n        }\n      }\n\n      this.state.trades.filter(function (trade) {\n        return new Date(trade.date) > now.toString();\n      }) // this probably won't work because of formatting\n      .forEach(function (trade) {\n        return trade.tags = \"Active editable\";\n      });\n      this.state.trades.filter(function (trade) {\n        return trade.date == now;\n      }).forEach(function (trade) {\n        return trade.tags = \"Active uneditable\";\n      });\n      this.state.trades.filter(function (trade) {\n        return trade.date < now;\n      }).forEach(function (trade) {\n        return trade.tags = \"Inactive\";\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Link, {\n        to: {\n          pathname: \"/pdf/\".concat(this.state.date),\n          state: {\n            data: this.state.trades\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Download\"));\n    }\n  }]);\n\n  return ReportPDF;\n}(React.Component);\n\nexport default ReportPDF;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/components/reportpdf.js"],"names":["React","axios","ReportGenerate","Link","Title","ReportPDF","state","button","now","Date","date","props","data","trades","tradeid","buyer","seller","product","quantity","notionalcurrency","underlyingcurrency","strikeprice","marketvalue","notionalvalue","time","tags","onDownload","e","setState","console","log","getTime","fixedDate","i","length","expiry","filter","trade","toString","forEach","pathname","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Typography, Button, Table, Tag } from \"antd\";\r\nimport ReportGenerate from \"./reportgenerate\";\r\nimport { Link } from \"react-router-dom\";\r\nconst { Title } = Typography;\r\n\r\nclass ReportPDF extends React.Component {\r\n  state = {\r\n    button: true,\r\n    now: new Date(),\r\n    date: this.props.date,\r\n    data: [],\r\n    trades: [\r\n      {\r\n        tradeid: \"1\",\r\n        buyer: \"John\",\r\n        seller: \"Sam\",\r\n        product: \"Stool\",\r\n        quantity: \"12\",\r\n        notionalcurrency: \"USD\",\r\n        underlyingcurrency: \"GBP\",\r\n        strikeprice: \"11\",\r\n        marketvalue: \"120\",\r\n        notionalvalue: \"13\",\r\n        date: \"2012-06-05\",\r\n        time: \"15:32:15\",\r\n        tags: \"A\"\r\n      },\r\n      {\r\n        tradeid: \"2\",\r\n        buyer: \"Harry\",\r\n        seller: \"Jamil\",\r\n        product: \"Plyers\",\r\n        quantity: \"123\",\r\n        notionalcurrency: \"GBP\",\r\n        underlyingcurrency: \"USD\",\r\n        strikeprice: \"43\",\r\n        marketvalue: \"23\",\r\n        notionalvalue: \"56\",\r\n        date: \"2014-05-21\",\r\n        time: \"15:12:14\",\r\n        tags: \"B\"\r\n      },\r\n      {\r\n        tradeid: \"3\",\r\n        buyer: \"Abdiaziz\",\r\n        seller: \"Bidhan\",\r\n        product: \"Screwdriver\",\r\n        quantity: \"24\",\r\n        notionalcurrency: \"GBP\",\r\n        underlyingcurrency: \"USD\",\r\n        strikeprice: \"1532\",\r\n        marketvalue: \"231\",\r\n        notionalvalue: \"234\",\r\n        date: \"2013-05-21\",\r\n        time: \"15:14:14\",\r\n        tags: \"C\"\r\n      }\r\n    ]\r\n  };\r\n  onDownload = e => {\r\n    this.setState({\r\n      button: false\r\n    });\r\n    console.log(`Report downloaded for ${this.state.date}`)\r\n  };\r\n  componentDidMount() {\r\n    var now = this.state.now.getTime();\r\n    console.log(`date format for now is ${now}`);\r\n    var fixedDate = new Date(this.state.trades[2].date).getTime();\r\n    console.log(`date format for trade is ${fixedDate}`);\r\n    // active editable is meant to be for trades added today right?\r\n    // I don't think we have data for these trades - maybe we have to filter it by\r\n    // the trades available on the portfolio page ?\r\n    var i;\r\n    for (i = 0; i < this.state.trades.length; i++) {\r\n      var expiry = new Date(this.state.trades[i].date).getTime();\r\n      if (expiry <= now) {\r\n        this.state.trades[i].tags = \"Inactive\";\r\n      } else {\r\n        this.state.trades[i].tags = \"Active\";\r\n      }\r\n    }\r\n    this.state.trades\r\n      .filter(trade => new Date(trade.date) > now.toString()) // this probably won't work because of formatting\r\n      .forEach(trade => (trade.tags = \"Active editable\"));\r\n    this.state.trades\r\n      .filter(trade => trade.date == now)\r\n      .forEach(trade => (trade.tags = \"Active uneditable\"));\r\n    this.state.trades\r\n      .filter(trade => trade.date < now)\r\n      .forEach(trade => (trade.tags = \"Inactive\"));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Link\r\n        to={{pathname: `/pdf/${this.state.date}`, state: {data: this.state.trades}}}\r\n      >\r\n          <Button type=\"link\">Download</Button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportPDF;\r\n"]},"metadata":{},"sourceType":"module"}