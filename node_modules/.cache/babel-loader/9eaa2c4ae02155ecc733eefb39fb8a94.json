{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\components\\\\addtrade.js\";\nimport React from \"react\";\nimport AddtradeComponent from \"./addtradeComponent\";\nimport axios from \"axios\";\n\nvar Addtrade =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Addtrade, _React$Component);\n\n  function Addtrade() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Addtrade);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Addtrade)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      disabled: false,\n      buyingParty: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      sellingParty: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      productStock: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      productName: {\n        value: \"\"\n      },\n      quantity: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      notionalCurrency: {\n        value: \"\"\n      },\n      underlyingCurrency: {\n        value: \"\"\n      },\n      strikePrice: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      expiryDate: {\n        value: \"\"\n      },\n      expiryTime: {\n        value: \"\"\n      },\n      posts: [],\n      currencylist: [\"KYD\", \"USD\", \"GBP\"],\n      companylist: [\"Tesla\", \"Apple\", \"eBay\", \"Alibaba\"],\n      productlist: [\"Car\", \"Oil\", \"Gun\", \"Gold\"]\n    };\n\n    _this.enableField = function () {\n      _this.setState({\n        disabled: false\n      });\n    };\n\n    _this.disableField = function () {\n      _this.setState({\n        disabled: true\n      });\n    };\n\n    _this.handleNumber = function (event) {\n      event.preventDefault();\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      var validator = \"validating\";\n      var helpMsg = \"\";\n      console.log(\"handling \".concat(name, \" set to \").concat(value));\n\n      if (name === \"quantity\" || name === \"strikePrice\") {\n        if (!Number(value) & value !== \"\" || Number(value) < 0) {\n          validator = \"error\";\n          helpMsg = name === \"quantity\" ? \"Enter a valid quantity\" : \"Enter a valid strike price\";\n        }\n      }\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, _defineProperty({}, name, {\n          value: value,\n          valid: validator,\n          help: helpMsg\n        }));\n      });\n    };\n\n    _this.handleBuyer = function (value) {\n      var validator = \"\";\n      var helpMsg = \"\";\n      console.log(\"Checking if \".concat(value, \" is equal to \").concat(_this.state.sellingParty.value));\n\n      if (value == _this.state.sellingParty.value) {\n        validator = \"error\";\n        helpMsg = \"Enter a valid buyer\";\n      }\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          buyingParty: {\n            value: value,\n            valid: validator,\n            help: helpMsg\n          }\n        });\n      });\n    };\n\n    _this.handleSeller = function (value) {\n      var validator = \"\";\n      var helpMsg = \"\";\n      console.log(\"Checking if \".concat(value, \" is equal to \").concat(_this.state.buyingParty.value));\n\n      if (value == _this.state.buyingParty.value) {\n        validator = \"error\";\n        helpMsg = \"Enter a valid seller\";\n      }\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          sellingParty: {\n            value: value,\n            valid: validator,\n            help: helpMsg\n          }\n        });\n      });\n    };\n\n    _this.handleNotional = function (v) {\n      console.log(console.log(\"selected notional \".concat(v)));\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          notionalCurrency: {\n            value: v\n          }\n        });\n      });\n    };\n\n    _this.handleDropdown = function (val) {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          productName: {\n            value: val\n          }\n        });\n      });\n    };\n\n    _this.handleUnderlying = function (v) {\n      console.log(console.log(\"selected underlying \".concat(v)));\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          underlyingCurrency: {\n            value: v,\n            valid: \"\",\n            help: \"\"\n          }\n        });\n      });\n    };\n\n    _this.handleExpirydate = function (d, ds) {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          expiryDate: {\n            value: ds\n          }\n        });\n      });\n    };\n\n    _this.handleExpirytime = function (d, ds) {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          expiryTime: {\n            value: ds\n          }\n        });\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      axios.get('https://http://localhost:5000/trades/get/ACCKXNIA50698568').then(function (response) {\n        console.log(response);\n\n        _this.setState({\n          posts: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleVerify = function () {\n      // market value = strike price * quantity in underlying currency\n      // notional value = current currency price * quantity in underlying currency\n      var strikeprice = _this.state.strikePrice.value;\n      var quantity = _this.state.strikePrice.value; // send these to API\n    };\n\n    return _this;\n  }\n\n  _createClass(Addtrade, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(AddtradeComponent, {\n        handleNotional: this.handleNotional,\n        handleNumber: this.handleNumber,\n        handleBuyer: this.handleBuyer,\n        handleSeller: this.handleSeller,\n        handleUnderlying: this.handleUnderlying,\n        handleDropdown: this.handleDropdown,\n        handleExpirydate: this.handleExpirydate,\n        handleExpirytime: this.handleExpirytime,\n        handleVerify: this.handleVerify,\n        handleSubmit: this.handleSubmit,\n        enableField: this.enableField,\n        disableField: this.disableField,\n        data: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Addtrade;\n}(React.Component);\n\nexport default Addtrade;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/components/addtrade.js"],"names":["React","AddtradeComponent","axios","Addtrade","state","disabled","buyingParty","value","valid","help","sellingParty","productStock","productName","quantity","notionalCurrency","underlyingCurrency","strikePrice","expiryDate","expiryTime","posts","currencylist","companylist","productlist","enableField","setState","disableField","handleNumber","event","preventDefault","target","name","validator","helpMsg","console","log","Number","prevState","handleBuyer","handleSeller","handleNotional","v","handleDropdown","val","handleUnderlying","handleExpirydate","d","ds","handleExpirytime","handleSubmit","e","get","then","response","data","catch","error","handleVerify","strikeprice","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport AddtradeComponent from \"./addtradeComponent\";\r\nimport axios from \"axios\";\r\n\r\nclass Addtrade extends React.Component {\r\n  state = {\r\n    disabled: false,\r\n    buyingParty: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    sellingParty: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    productStock: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    productName: {\r\n      value: \"\"\r\n    },\r\n    quantity: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    notionalCurrency: {\r\n      value: \"\"\r\n    },\r\n    underlyingCurrency: {\r\n      value: \"\"\r\n    },\r\n    strikePrice: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    expiryDate: {\r\n      value: \"\"\r\n    },\r\n    expiryTime: {\r\n      value: \"\"\r\n    },\r\n    posts : [],\r\n    currencylist: [\"KYD\", \"USD\", \"GBP\"],\r\n    companylist: [\"Tesla\", \"Apple\", \"eBay\", \"Alibaba\"],\r\n    productlist: [\"Car\", \"Oil\", \"Gun\", \"Gold\"]\r\n  };\r\n\r\n  enableField = () => {\r\n    this.setState({\r\n      disabled: false\r\n    });\r\n  };\r\n\r\n  disableField = () => {\r\n    this.setState({\r\n      disabled: true\r\n    });\r\n  };\r\n  handleNumber = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    var validator = \"validating\";\r\n    var helpMsg = \"\";\r\n    console.log(`handling ${name} set to ${value}`);\r\n    if (name === \"quantity\" || name === \"strikePrice\") {\r\n      if (!Number(value) & (value !== \"\") || Number(value) < 0) {\r\n        validator = \"error\";\r\n        helpMsg =\r\n          name === \"quantity\"\r\n            ? \"Enter a valid quantity\"\r\n            : \"Enter a valid strike price\";\r\n      }\r\n    }\r\n    this.setState(prevState => ({\r\n      // must take into account previous state as is an object with changing properties\r\n      ...prevState, //Spread notation means to copy all same properties of previous states object \"errors\"\r\n      [name]: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n  handleBuyer = value => {\r\n    var validator = \"\";\r\n    var helpMsg = \"\";\r\n    console.log(\r\n      `Checking if ${value} is equal to ${this.state.sellingParty.value}`\r\n    );\r\n    if (value == this.state.sellingParty.value) {\r\n      validator = \"error\";\r\n      helpMsg = \"Enter a valid buyer\";\r\n    }\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      buyingParty: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n  handleSeller = value => {\r\n    var validator = \"\";\r\n    var helpMsg = \"\";\r\n    console.log(\r\n      `Checking if ${value} is equal to ${this.state.buyingParty.value}`\r\n    );\r\n    if (value == this.state.buyingParty.value) {\r\n      validator = \"error\";\r\n      helpMsg = \"Enter a valid seller\";\r\n    }\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      sellingParty: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleNotional = v => {\r\n    console.log(console.log(`selected notional ${v}`));\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      notionalCurrency: {\r\n        value: v\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleDropdown = val => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      productName: {\r\n        value: val\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleUnderlying = v => {\r\n    console.log(console.log(`selected underlying ${v}`));\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      underlyingCurrency: {\r\n        value: v,\r\n        valid: \"\",\r\n        help: \"\"\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleExpirydate = (d, ds) => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      expiryDate: {\r\n        value: ds\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleExpirytime = (d, ds) => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      expiryTime: {\r\n        value: ds\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    axios.get('https://http://localhost:5000/trades/get/ACCKXNIA50698568')\r\n      .then(response => {\r\n        console.log(response)\r\n        this.setState({posts : response.data})\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  handleVerify = () => {\r\n    // market value = strike price * quantity in underlying currency\r\n    // notional value = current currency price * quantity in underlying currency\r\n    var strikeprice = this.state.strikePrice.value;\r\n    var quantity = this.state.strikePrice.value;\r\n    // send these to API\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AddtradeComponent\r\n        handleNotional={this.handleNotional}\r\n        handleNumber={this.handleNumber}\r\n        handleBuyer={this.handleBuyer}\r\n        handleSeller={this.handleSeller}\r\n        handleUnderlying={this.handleUnderlying}\r\n        handleDropdown={this.handleDropdown}\r\n        handleExpirydate={this.handleExpirydate}\r\n        handleExpirytime={this.handleExpirytime}\r\n        handleVerify={this.handleVerify}\r\n        handleSubmit={this.handleSubmit}\r\n        enableField={this.enableField}\r\n        disableField={this.disableField}\r\n        data={this.state}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Addtrade;\r\n"]},"metadata":{},"sourceType":"module"}