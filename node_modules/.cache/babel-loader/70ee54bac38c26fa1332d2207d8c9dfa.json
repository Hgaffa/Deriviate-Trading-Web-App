{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\components\\\\dashchart.js\";\nimport React from \"react\";\nimport { ResponsiveContainer } from \"recharts\";\nimport { ResponsiveLine } from \"@nivo/line\";\n\nvar Dashchart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashchart, _React$Component);\n\n  function Dashchart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashchart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashchart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: _this.props.lazy\n    };\n    return _this;\n  }\n\n  _createClass(Dashchart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(ResponsiveLine, {\n        data: this.state.data,\n        margin: {\n          top: 20,\n          right: 110,\n          bottom: 70,\n          left: 60\n        },\n        xScale: {\n          type: \"point\"\n        },\n        yScale: {\n          type: \"linear\",\n          min: \"auto\",\n          max: \"auto\",\n          stacked: true,\n          reverse: false\n        },\n        curve: \"natural\",\n        axisTop: null,\n        axisRight: null,\n        axisBottom: {\n          orient: \"bottom\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: -33,\n          legend: \"\",\n          legendOffset: 50,\n          legendPosition: \"middle\"\n        },\n        axisLeft: {\n          orient: \"left\",\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: \"USD\",\n          legendOffset: -40,\n          legendPosition: \"middle\"\n        },\n        colors: \"#006fff\",\n        pointSize: 10,\n        pointColor: {\n          theme: \"background\"\n        },\n        pointBorderWidth: 2,\n        pointBorderColor: {\n          from: \"serieColor\"\n        },\n        pointLabel: \"y\",\n        pointLabelYOffset: -12,\n        useMesh: true,\n        legends: [{\n          anchor: \"bottom-right\",\n          direction: \"column\",\n          justify: false,\n          translateX: 100,\n          translateY: 0,\n          itemsSpacing: 0,\n          itemDirection: \"left-to-right\",\n          itemWidth: 80,\n          itemHeight: 20,\n          itemOpacity: 0.75,\n          symbolSize: 12,\n          symbolShape: \"circle\",\n          symbolBorderColor: \"rgba(0, 0, 0, .5)\",\n          effects: [{\n            on: \"hover\",\n            style: {\n              itemBackground: \"rgba(0, 0, 0, .03)\",\n              itemOpacity: 1\n            }\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashchart;\n}(React.Component);\n\nexport default Dashchart; //ReactDOM.render(<Dashchart />, mountNode);","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/components/dashchart.js"],"names":["React","ResponsiveContainer","ResponsiveLine","Dashchart","state","data","props","lazy","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { ResponsiveContainer } from \"recharts\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\n\r\nclass Dashchart extends React.Component {\r\n  state = {\r\n    data: this.props.lazy,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <ResponsiveLine\r\n          data={this.state.data}\r\n          margin={{ top: 20, right: 110, bottom: 70, left: 60 }}\r\n          xScale={{ type: \"point\" }}\r\n          yScale={{\r\n            type: \"linear\",\r\n            min: \"auto\",\r\n            max: \"auto\",\r\n            stacked: true,\r\n            reverse: false\r\n          }}\r\n          curve=\"natural\"\r\n          axisTop={null}\r\n          axisRight={null}\r\n          axisBottom={{\r\n            orient: \"bottom\",\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: -33,\r\n            legend: \"\",\r\n            legendOffset: 50,\r\n            legendPosition: \"middle\"\r\n          }}\r\n          axisLeft={{\r\n            orient: \"left\",\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: \"USD\",\r\n            legendOffset: -40,\r\n            legendPosition: \"middle\"\r\n          }}\r\n          colors=\"#006fff\"\r\n          pointSize={10}\r\n          pointColor={{ theme: \"background\" }}\r\n          pointBorderWidth={2}\r\n          pointBorderColor={{ from: \"serieColor\" }}\r\n          pointLabel=\"y\"\r\n          pointLabelYOffset={-12}\r\n          useMesh={true}\r\n          legends={[\r\n            {\r\n              anchor: \"bottom-right\",\r\n              direction: \"column\",\r\n              justify: false,\r\n              translateX: 100,\r\n              translateY: 0,\r\n              itemsSpacing: 0,\r\n              itemDirection: \"left-to-right\",\r\n              itemWidth: 80,\r\n              itemHeight: 20,\r\n              itemOpacity: 0.75,\r\n              symbolSize: 12,\r\n              symbolShape: \"circle\",\r\n              symbolBorderColor: \"rgba(0, 0, 0, .5)\",\r\n              effects: [\r\n                {\r\n                  on: \"hover\",\r\n                  style: {\r\n                    itemBackground: \"rgba(0, 0, 0, .03)\",\r\n                    itemOpacity: 1\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n        />\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashchart;\r\n//ReactDOM.render(<Dashchart />, mountNode);\r\n"]},"metadata":{},"sourceType":"module"}