{"ast":null,"code":"import \"antd/es/list/style\";\nimport _List from \"antd/es/list\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\reports.js\";\nimport React from \"react\";\nimport Moment from \"moment\";\nimport ReportPDF from \"./components/reportpdf\";\nimport { Link } from \"react-router-dom\";\nvar RangePicker = _DatePicker.RangePicker;\n\nvar Reports =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Reports, _React$Component);\n\n  function Reports() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Reports);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Reports)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      list: [],\n      dateString: \"\"\n    };\n\n    _this.getDayBefore = function (d) {\n      var date = new Date(d);\n      date.setDate(date.getDate() - 1);\n      return Moment(date).format('YYYY-MM-DD');\n    };\n\n    _this.onChange = function (date, dateString) {\n      _this.setState({\n        dateString: dateString\n      });\n\n      console.log(dateString);\n    };\n\n    _this.handleGenerateRange = function (e) {\n      console.log(\"Generate pdf for range \".concat(_this.state.dateString));\n    };\n\n    return _this;\n  }\n\n  _createClass(Reports, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var d1 = \"2020-01-01\";\n      var d2 = this.getDayBefore(d1);\n      var d3 = this.getDayBefore(d2);\n      var d4 = this.getDayBefore(d3);\n      var d5 = this.getDayBefore(d4);\n      var d6 = this.getDayBefore(d5);\n      var d7 = this.getDayBefore(d6);\n      this.setState({\n        list: [d1, d2, d3, d4, d5, d6, d7]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n        style: {\n          margin: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Generate reports:\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Generate report of all trades made today: \"), React.createElement(Link, {\n        to: {\n          pathname: \"/pdf/2020-01-01\",\n          state: {\n            data: this.state.trades\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        htmlType: \"submit\",\n        style: {\n          marginLeft: 8\n        },\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Generate\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), \"Generate report between specific dates:\", \" \", React.createElement(RangePicker, {\n        style: {\n          marginLeft: 8\n        },\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        style: {\n          marginLeft: 8\n        },\n        type: \"primary\",\n        onClick: this.handleGenerateRange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Generate\"), React.createElement(\"h1\", {\n        style: {\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Previous Reports\"), React.createElement(_List, {\n        itemLayout: \"vertical\",\n        dataSource: this.state.list,\n        renderItem: function renderItem(item) {\n          return React.createElement(_List.Item, {\n            extra: React.createElement(ReportPDF, {\n              date: item,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Reports;\n}(React.Component);\n\nexport default Reports;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/reports.js"],"names":["React","Moment","ReportPDF","Link","RangePicker","Reports","state","list","dateString","getDayBefore","d","date","Date","setDate","getDate","format","onChange","setState","console","log","handleGenerateRange","e","d1","d2","d3","d4","d5","d6","d7","margin","pathname","data","trades","marginLeft","textAlign","item","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { List, Table, Icon, Button, DatePicker } from \"antd\";\r\nimport Moment from \"moment\"\r\nimport ReportPDF from \"./components/reportpdf\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nclass Reports extends React.Component {\r\n  state = {\r\n    list: [],\r\n    dateString: \"\"\r\n  };\r\n  getDayBefore = (d) =>{\r\n    var date = new Date(d)\r\n    date.setDate(date.getDate() - 1);\r\n    return Moment(date).format('YYYY-MM-DD')\r\n  }\r\n  componentDidMount(){\r\n    var d1 = \"2020-01-01\"\r\n    var d2 = this.getDayBefore(d1)\r\n    var d3 = this.getDayBefore(d2)\r\n    var d4 = this.getDayBefore(d3)\r\n    var d5 = this.getDayBefore(d4)\r\n    var d6 = this.getDayBefore(d5)\r\n    var d7 = this.getDayBefore(d6)\r\n    this.setState({list : [d1,d2,d3,d4,d5,d6,d7]})\r\n  }\r\n  onChange = (date, dateString) => {\r\n    this.setState({\r\n      dateString: dateString\r\n    });\r\n    console.log(dateString);\r\n  };\r\n  handleGenerateRange = e => {\r\n    console.log(`Generate pdf for range ${this.state.dateString}`);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <section style={{ margin: 20 }}>\r\n          <h2>Generate reports:</h2>\r\n          <span>Generate report of all trades made today: </span>\r\n          <Link\r\n            to={{pathname: `/pdf/2020-01-01`, state: {data: this.state.trades}}}\r\n          >\r\n            <Button\r\n              htmlType=\"submit\"\r\n              style={{ marginLeft: 8 }}\r\n              type=\"primary\"\r\n            >\r\n              Generate\r\n            </Button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          Generate report between specific dates:{\" \"}\r\n          <RangePicker style={{ marginLeft: 8 }} onChange={this.onChange} />\r\n          <Button\r\n            style={{ marginLeft: 8 }}\r\n            type=\"primary\"\r\n            onClick={this.handleGenerateRange}\r\n          >\r\n            Generate\r\n          </Button>\r\n          <h1 style={{ textAlign: \"left\" }}>Previous Reports</h1>\r\n          <List\r\n            itemLayout=\"vertical\"\r\n            dataSource={this.state.list}\r\n            renderItem={item => <List.Item extra={<ReportPDF date={item}/>}>{item}</List.Item>}\r\n          />\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reports;\r\n"]},"metadata":{},"sourceType":"module"}