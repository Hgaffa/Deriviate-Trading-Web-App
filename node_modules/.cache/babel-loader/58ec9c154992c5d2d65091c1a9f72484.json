{"ast":null,"code":"import _classCallCheck from\"/Users/nick/Documents/derivatives/git_deriv/derivatives/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nick/Documents/derivatives/git_deriv/derivatives/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/nick/Documents/derivatives/git_deriv/derivatives/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/nick/Documents/derivatives/git_deriv/derivatives/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/nick/Documents/derivatives/git_deriv/derivatives/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import{Line,LineChart,Tooltip,CartesianGrid,Legend,XAxis,YAxis}from\"recharts\";var data=[{date:\"2020-02-17\",AAPL:4000,TSLA:2400,amt:2400},{date:\"2020-02-18\",AAPL:3000,TSLA:1398,amt:2210},{date:\"2020-02-19\",AAPL:2000,TSLA:9800,amt:2290},{date:\"2020-02-20\",AAPL:2780,TSLA:3908,amt:2000},{date:\"2020-02-21\",AAPL:1890,TSLA:4800,amt:2181},{date:\"2020-02-22\",AAPL:2390,TSLA:3800,amt:2500},{date:\"2020-02-23\",AAPL:3490,TSLA:4300,amt:2100},{date:\"2020-02-24\",AAPL:4400,TSLA:5000,amt:2700},{date:\"2020-02-25\",AAPL:5000,TSLA:7600,amt:2000},{date:\"2020-02-26\",AAPL:6000,TSLA:2500,amt:2540},{date:\"2020-02-27\",AAPL:8000,TSLA:2600,amt:2220}];var Dashchart=/*#__PURE__*/function(_React$Component){_inherits(Dashchart,_React$Component);function Dashchart(){_classCallCheck(this,Dashchart);return _possibleConstructorReturn(this,_getPrototypeOf(Dashchart).apply(this,arguments));}_createClass(Dashchart,[{key:\"render\",value:function render(){return React.createElement(LineChart,{width:730,height:250,data:data,margin:{top:5,right:30,left:20,bottom:5}},React.createElement(CartesianGrid,{strokeDasharray:\"3 3\"}),React.createElement(XAxis,{dataKey:\"date\",padding:{left:30,right:30}}),React.createElement(YAxis,null),React.createElement(Tooltip,null),React.createElement(Legend,null),React.createElement(Line,{type:\"monotone\",dataKey:\"TSLA\",stroke:\"#006fff\"}),React.createElement(Line,{type:\"monotone\",dataKey:\"AAPL\",stroke:\"#1bd962\"}));}}]);return Dashchart;}(React.Component);export default Dashchart;//ReactDOM.render(<Dashchart />, mountNode);","map":{"version":3,"sources":["/Users/nick/Documents/derivatives/git_deriv/derivatives/src/components/dashchart.js"],"names":["React","Line","LineChart","Tooltip","CartesianGrid","Legend","XAxis","YAxis","data","date","AAPL","TSLA","amt","Dashchart","top","right","left","bottom","Component"],"mappings":"gsBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,IADF,CAEEC,SAFF,CAGEC,OAHF,CAIEC,aAJF,CAKEC,MALF,CAMEC,KANF,CAOEC,KAPF,KAQO,UARP,CAUA,GAAMC,CAAAA,IAAI,CAAG,CACX,CACEC,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CADW,CAOX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CAPW,CAaX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CAbW,CAmBX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CAnBW,CAyBX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CAzBW,CA+BX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CA/BW,CAqCX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CArCW,CA2CX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CA3CW,CAiDX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CAjDW,CAuDX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CAvDW,CA6DX,CACEH,IAAI,CAAE,YADR,CAEEC,IAAI,CAAE,IAFR,CAGEC,IAAI,CAAE,IAHR,CAIEC,GAAG,CAAE,IAJP,CA7DW,CAAb,C,GAqEMC,CAAAA,S,2RACK,CACP,MACE,qBAAC,SAAD,EACE,KAAK,CAAE,GADT,CAEE,MAAM,CAAE,GAFV,CAGE,IAAI,CAAEL,IAHR,CAIE,MAAM,CAAE,CAAEM,GAAG,CAAE,CAAP,CAAUC,KAAK,CAAE,EAAjB,CAAqBC,IAAI,CAAE,EAA3B,CAA+BC,MAAM,CAAE,CAAvC,CAJV,EAME,oBAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EANF,CAOE,oBAAC,KAAD,EAAO,OAAO,CAAC,MAAf,CAAsB,OAAO,CAAE,CAAED,IAAI,CAAE,EAAR,CAAYD,KAAK,CAAE,EAAnB,CAA/B,EAPF,CAQE,oBAAC,KAAD,MARF,CASE,oBAAC,OAAD,MATF,CAUE,oBAAC,MAAD,MAVF,CAWE,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,MAA9B,CAAqC,MAAM,CAAC,SAA5C,EAXF,CAYE,oBAAC,IAAD,EAAM,IAAI,CAAC,UAAX,CAAsB,OAAO,CAAC,MAA9B,CAAqC,MAAM,CAAC,SAA5C,EAZF,CADF,CAgBD,C,uBAlBqBf,KAAK,CAACkB,S,EAqB9B,cAAeL,CAAAA,SAAf,CACA","sourcesContent":["import React from \"react\";\nimport {\n  Line,\n  LineChart,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nconst data = [\n  {\n    date: \"2020-02-17\",\n    AAPL: 4000,\n    TSLA: 2400,\n    amt: 2400\n  },\n  {\n    date: \"2020-02-18\",\n    AAPL: 3000,\n    TSLA: 1398,\n    amt: 2210\n  },\n  {\n    date: \"2020-02-19\",\n    AAPL: 2000,\n    TSLA: 9800,\n    amt: 2290\n  },\n  {\n    date: \"2020-02-20\",\n    AAPL: 2780,\n    TSLA: 3908,\n    amt: 2000\n  },\n  {\n    date: \"2020-02-21\",\n    AAPL: 1890,\n    TSLA: 4800,\n    amt: 2181\n  },\n  {\n    date: \"2020-02-22\",\n    AAPL: 2390,\n    TSLA: 3800,\n    amt: 2500\n  },\n  {\n    date: \"2020-02-23\",\n    AAPL: 3490,\n    TSLA: 4300,\n    amt: 2100\n  },\n  {\n    date: \"2020-02-24\",\n    AAPL: 4400,\n    TSLA: 5000,\n    amt: 2700\n  },\n  {\n    date: \"2020-02-25\",\n    AAPL: 5000,\n    TSLA: 7600,\n    amt: 2000\n  },\n  {\n    date: \"2020-02-26\",\n    AAPL: 6000,\n    TSLA: 2500,\n    amt: 2540\n  },\n  {\n    date: \"2020-02-27\",\n    AAPL: 8000,\n    TSLA: 2600,\n    amt: 2220\n  }\n];\n\nclass Dashchart extends React.Component {\n  render() {\n    return (\n      <LineChart\n        width={730}\n        height={250}\n        data={data}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" padding={{ left: 30, right: 30 }}/>\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"TSLA\" stroke=\"#006fff\" />\n        <Line type=\"monotone\" dataKey=\"AAPL\" stroke=\"#1bd962\" />\n      </LineChart>\n    );\n  }\n}\n\nexport default Dashchart;\n//ReactDOM.render(<Dashchart />, mountNode);\n"]},"metadata":{},"sourceType":"module"}