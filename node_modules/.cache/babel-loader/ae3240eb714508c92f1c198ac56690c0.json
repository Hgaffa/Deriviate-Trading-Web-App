{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\components\\\\edittrade.js\";\nimport React from \"react\";\nimport EdittradeComponent from \"./edittradeComponent\";\nimport axios from \"axios\";\n\nvar Edittrade =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Edittrade, _React$Component);\n\n  function Edittrade() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Edittrade);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Edittrade)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tradeId: \"\",\n      createTradedata: {\n        BuyingParty: \"\",\n        SellingParty: \"\",\n        ProductName: \"\",\n        Quantity: \"\",\n        NotionalCurrency: \"\",\n        UnderlyingCurrency: \"\",\n        StrikePrice: \"\",\n        MaturityDate: \"\",\n        Tdate: \"\",\n        NotionalAmount: \"\",\n        UnderlyingPrice: \"\"\n      },\n      disabled: false,\n      visible: false,\n      buyingParty: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      sellingParty: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      productStock: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      productName: {\n        value: \"\"\n      },\n      quantity: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      notionalCurrency: {\n        value: \"\"\n      },\n      underlyingCurrency: {\n        value: \"\"\n      },\n      strikePrice: {\n        value: \"\",\n        valid: \"\",\n        help: \"\"\n      },\n      expiryDate: {\n        value: \"\"\n      },\n      expiryTime: {\n        value: \"\"\n      },\n      currencyList: [],\n      productList: [],\n      companyList: [],\n      isVerified: false,\n      verifiedData: {\n        marketValue: \"\",\n        notionalValue: \"\",\n        currentValue: \"\"\n      },\n      verifyData: {\n        quantity: \"\",\n        sellingParty: \"\",\n        productName: \"\",\n        notionalCurrency: \"\",\n        strikePrice: \"\"\n      }\n    };\n\n    _this.showModal = function (e) {\n      e.stopPropagation();\n\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      e.stopPropagation();\n      console.log(e);\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      e.stopPropagation();\n      console.log(e);\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.enableField = function () {\n      _this.setState({\n        disabled: false\n      });\n    };\n\n    _this.disableField = function () {\n      _this.setState({\n        disabled: true\n      });\n    };\n\n    _this.handleNumber = function (event) {\n      event.preventDefault();\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      var validator = \"validating\";\n      var helpMsg = \"\";\n      console.log(\"handling \".concat(name, \" set to \").concat(value));\n\n      if (name === \"quantity\" || name === \"strikePrice\") {\n        if (!Number(value) & value !== \"\" || Number(value) < 0) {\n          validator = \"error\";\n          helpMsg = name === \"quantity\" ? \"Enter a valid quantity\" : \"Enter a valid strike price\";\n        }\n      }\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, _defineProperty({}, name, {\n          value: value,\n          valid: validator,\n          help: helpMsg\n        }));\n      });\n    };\n\n    _this.handleBuyer = function (value) {\n      var validator = \"\";\n      var helpMsg = \"\";\n      console.log(\"Checking if \".concat(value, \" is equal to \").concat(_this.state.sellingParty.value));\n\n      if (value == _this.state.sellingParty.value) {\n        validator = \"error\";\n        helpMsg = \"Enter a valid buyer\";\n      }\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          buyingParty: {\n            value: value,\n            valid: validator,\n            help: helpMsg\n          }\n        });\n      });\n    };\n\n    _this.handleSeller = function (value) {\n      var validator = \"\";\n      var helpMsg = \"\";\n      console.log(\"Checking if \".concat(value, \" is equal to \").concat(_this.state.buyingParty.value));\n\n      if (value == _this.state.buyingParty.value) {\n        validator = \"error\";\n        helpMsg = \"Enter a valid seller\";\n      }\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          sellingParty: {\n            value: value,\n            valid: validator,\n            help: helpMsg\n          }\n        });\n      });\n    };\n\n    _this.handleNotional = function (v) {\n      console.log(console.log(\"selected notional \".concat(v)));\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          notionalCurrency: {\n            value: v\n          }\n        });\n      });\n    };\n\n    _this.handleDropdown = function (val) {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          productName: {\n            value: val\n          }\n        });\n      });\n    };\n\n    _this.handleUnderlying = function (v) {\n      console.log(console.log(\"selected underlying \".concat(v)));\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          underlyingCurrency: {\n            value: v,\n            valid: \"\",\n            help: \"\"\n          }\n        });\n      });\n    };\n\n    _this.handleExpirydate = function (d, ds) {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          expiryDate: {\n            value: ds\n          }\n        });\n      });\n    };\n\n    _this.handleExpirytime = function (d, ds) {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          expiryTime: {\n            value: ds\n          }\n        });\n      });\n    };\n\n    _this.isStock = function () {\n      if (_this.state.productStock.value === \"Stock\") {\n        _this.setState(function (prevState) {\n          return _objectSpread({}, prevState, {\n            productName: {\n              value: \"Stock\"\n            }\n          });\n        });\n      }\n    };\n\n    _this.handleVerify = function () {\n      _this.isStock();\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          verifyData: {\n            quantity: _this.state.quantity.value,\n            sellingParty: _this.state.sellingParty.value,\n            productName: _this.state.productName.value,\n            notionalCurrency: _this.state.notionalCurrency.value,\n            strikePrice: _this.state.strikePrice.value\n          }\n        });\n      });\n    };\n\n    _this.getVerify =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var options;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.handleVerify();\n\n            case 2:\n              options = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              axios.post(\"http://127.0.0.1:5000/trades/verify\", _this.state.verifyData).then(function (response) {\n                console.log(response.data.result);\n\n                _this.setState(function (prevState) {\n                  return _objectSpread({}, prevState, {\n                    verifiedData: {\n                      marketValue: response.data.result.marketValue,\n                      notionalValue: response.data.result.notionalValue,\n                      currentValue: response.data.result.currentPrice\n                    }\n                  });\n                });\n              }).catch(function (error) {\n                console.log(\"ERROR: =============\", error.response);\n              });\n\n              _this.setState({\n                isVerified: true\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    _this.handleSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var d, h, m, currtime;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.isStock();\n\n              d = new Date();\n              h = d.getHours();\n              m = d.getMinutes();\n              currtime = \"2020-01-01 \" + h + \":\" + m;\n              _context2.next = 7;\n              return _this.setState(function (prevState) {\n                return _objectSpread({}, prevState, {\n                  createTradedata: {\n                    BuyingParty: _this.state.buyingParty.value,\n                    SellingParty: _this.state.sellingParty.value,\n                    Product: _this.state.productName.value,\n                    Quantity: _this.state.quantity.value,\n                    NotionalCurrency: _this.state.notionalCurrency.value,\n                    UnderlyingCurrency: _this.state.underlyingCurrency.value,\n                    StrikePrice: _this.state.strikePrice.value,\n                    MaturityDate: _this.state.expiryDate.value,\n                    Tdate: currtime,\n                    NotionalAmount: _this.state.verifiedData.notionalValue,\n                    UnderlyingPrice: _this.state.verifiedData.marketValue\n                  }\n                });\n              });\n\n            case 7:\n              axios.post(\"http://127.0.0.1:5000/trades/edit/\".concat(_this.state.tradeid), _this.state.createTradedata).then(function (response) {\n                console.log(response.data);\n              }).catch(function (error) {\n                console.log(\"ERROR: =============\", error.response);\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Edittrade, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //This is an example of a lifecycle method. This method will only be called once, when the component is \"mounted\"/first rendered\n      axios.get(\"http://127.0.0.1:5000/company/list\").then(function (response) {\n        _this2.setState({\n          companyList: response.data.result\n        });\n\n        console.log(_this2.state.companyList);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get(\"http://127.0.0.1:5000/product/list\").then(function (response) {\n        _this2.setState({\n          productList: response.data.result\n        });\n\n        console.log(_this2.state.productList);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      axios.get(\"http://127.0.0.1:5000/currency/list\").then(function (response) {\n        _this2.setState({\n          currencyList: response.data.result\n        });\n\n        console.log(response.data);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(EdittradeComponent, {\n        showModal: this.showModal,\n        handleOk: this.handleOk,\n        handleCancel: this.handleCancel,\n        handleNotional: this.handleNotional,\n        handleNumber: this.handleNumber,\n        handleBuyer: this.handleBuyer,\n        handleSeller: this.handleSeller,\n        handleUnderlying: this.handleUnderlying,\n        handleDropdown: this.handleDropdown,\n        handleExpirydate: this.handleExpirydate,\n        handleExpirytime: this.handleExpirytime,\n        handleVerify: this.getVerify,\n        enableField: this.enableField,\n        disableField: this.disableField,\n        data: this.state,\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Edittrade;\n}(React.Component);\n\nexport default Edittrade;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/components/edittrade.js"],"names":["React","EdittradeComponent","axios","Edittrade","state","tradeId","createTradedata","BuyingParty","SellingParty","ProductName","Quantity","NotionalCurrency","UnderlyingCurrency","StrikePrice","MaturityDate","Tdate","NotionalAmount","UnderlyingPrice","disabled","visible","buyingParty","value","valid","help","sellingParty","productStock","productName","quantity","notionalCurrency","underlyingCurrency","strikePrice","expiryDate","expiryTime","currencyList","productList","companyList","isVerified","verifiedData","marketValue","notionalValue","currentValue","verifyData","showModal","e","stopPropagation","setState","handleOk","console","log","handleCancel","enableField","disableField","handleNumber","event","preventDefault","target","name","validator","helpMsg","Number","prevState","handleBuyer","handleSeller","handleNotional","v","handleDropdown","val","handleUnderlying","handleExpirydate","d","ds","handleExpirytime","isStock","handleVerify","getVerify","options","headers","post","then","response","data","result","currentPrice","catch","error","handleSubmit","Date","h","getHours","m","getMinutes","currtime","Product","tradeid","get","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport EdittradeComponent from \"./edittradeComponent\";\r\nimport axios from \"axios\";\r\nclass Edittrade extends React.Component {\r\n  state = {\r\n    tradeId: \"\",\r\n    createTradedata: {\r\n      BuyingParty: \"\",\r\n      SellingParty: \"\",\r\n      ProductName: \"\",\r\n      Quantity: \"\",\r\n      NotionalCurrency: \"\",\r\n      UnderlyingCurrency: \"\",\r\n      StrikePrice: \"\",\r\n      MaturityDate: \"\",\r\n      Tdate: \"\",\r\n      NotionalAmount: \"\",\r\n      UnderlyingPrice: \"\"\r\n    },\r\n    disabled: false,\r\n    visible: false,\r\n    buyingParty: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    sellingParty: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    productStock: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    productName: {\r\n      value: \"\"\r\n    },\r\n    quantity: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    notionalCurrency: {\r\n      value: \"\"\r\n    },\r\n    underlyingCurrency: {\r\n      value: \"\"\r\n    },\r\n    strikePrice: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    expiryDate: {\r\n      value: \"\"\r\n    },\r\n    expiryTime: {\r\n      value: \"\"\r\n    },\r\n    currencyList: [],\r\n    productList: [],\r\n    companyList: [],\r\n    isVerified: false,\r\n    verifiedData: {\r\n      marketValue: \"\",\r\n      notionalValue: \"\",\r\n      currentValue: \"\"\r\n    },\r\n    verifyData: {\r\n      quantity: \"\",\r\n      sellingParty: \"\",\r\n      productName: \"\",\r\n      notionalCurrency: \"\",\r\n      strikePrice: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidMount(){                                        //This is an example of a lifecycle method. This method will only be called once, when the component is \"mounted\"/first rendered\r\n    axios.get(\"http://127.0.0.1:5000/company/list\")\r\n      .then(response => {\r\n        this.setState({companyList : response.data.result})\r\n        console.log(this.state.companyList)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    axios.get(\"http://127.0.0.1:5000/product/list\")\r\n      .then(response => {\r\n        this.setState({productList : response.data.result})\r\n        console.log(this.state.productList)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    axios.get(\"http://127.0.0.1:5000/currency/list\")\r\n      .then(response => {\r\n        this.setState({currencyList : response.data.result})\r\n        console.log(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  showModal = e => {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    e.stopPropagation();\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    e.stopPropagation();\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  enableField = () => {\r\n    this.setState({\r\n      disabled: false\r\n    });\r\n  };\r\n\r\n  disableField = () => {\r\n    this.setState({\r\n      disabled: true\r\n    });\r\n  };\r\n  handleNumber = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    var validator = \"validating\";\r\n    var helpMsg = \"\";\r\n    console.log(`handling ${name} set to ${value}`);\r\n    if (name === \"quantity\" || name === \"strikePrice\") {\r\n      if (!Number(value) & (value !== \"\") || Number(value) < 0) {\r\n        validator = \"error\";\r\n        helpMsg =\r\n          name === \"quantity\"\r\n            ? \"Enter a valid quantity\"\r\n            : \"Enter a valid strike price\";\r\n      }\r\n    }\r\n    this.setState(prevState => ({\r\n      // must take into account previous state as is an object with changing properties\r\n      ...prevState, //Spread notation means to copy all same properties of previous states object \"errors\"\r\n      [name]: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n  handleBuyer = value => {\r\n    var validator = \"\";\r\n    var helpMsg = \"\";\r\n    console.log(\r\n      `Checking if ${value} is equal to ${this.state.sellingParty.value}`\r\n    );\r\n    if (value == this.state.sellingParty.value) {\r\n      validator = \"error\";\r\n      helpMsg = \"Enter a valid buyer\";\r\n    }\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      buyingParty: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n  handleSeller = value => {\r\n    var validator = \"\";\r\n    var helpMsg = \"\";\r\n    console.log(\r\n      `Checking if ${value} is equal to ${this.state.buyingParty.value}`\r\n    );\r\n    if (value == this.state.buyingParty.value) {\r\n      validator = \"error\";\r\n      helpMsg = \"Enter a valid seller\";\r\n    }\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      sellingParty: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleNotional = v => {\r\n    console.log(console.log(`selected notional ${v}`));\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      notionalCurrency: {\r\n        value: v\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleDropdown = val => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      productName: {\r\n        value: val\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleUnderlying = v => {\r\n    console.log(console.log(`selected underlying ${v}`));\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      underlyingCurrency: {\r\n        value: v,\r\n        valid: \"\",\r\n        help: \"\"\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleExpirydate = (d, ds) => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      expiryDate: {\r\n        value: ds\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleExpirytime = (d, ds) => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      expiryTime: {\r\n        value: ds\r\n      }\r\n    }));\r\n  };\r\n\r\n  isStock = () => {\r\n    if(this.state.productStock.value === \"Stock\"){\r\n      this.setState(prevState => ({\r\n          ...prevState,\r\n          productName: {\r\n            value: \"Stock\"\r\n          }\r\n      }))\r\n    }\r\n  }\r\n\r\n  handleVerify = () => {\r\n    this.isStock()\r\n    this.setState(prevState => ({\r\n        ...prevState,\r\n        verifyData: {\r\n          quantity: this.state.quantity.value,\r\n          sellingParty: this.state.sellingParty.value,\r\n          productName: this.state.productName.value,\r\n          notionalCurrency: this.state.notionalCurrency.value,\r\n          strikePrice: this.state.strikePrice.value\r\n        }\r\n    }))\r\n  };\r\n\r\n  getVerify = async () =>{\r\n    await this.handleVerify();\r\n    const options = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:5000/trades/verify\", this.state.verifyData)\r\n      .then(response => {\r\n        console.log(response.data.result)\r\n        this.setState(prevState => ({\r\n            ...prevState,\r\n            verifiedData: {\r\n              marketValue: response.data.result.marketValue,\r\n              notionalValue: response.data.result.notionalValue,\r\n              currentValue: response.data.result.currentPrice\r\n            }\r\n        }))\r\n      })\r\n      .catch(error => {\r\n        console.log(\"ERROR: =============\", error.response)\r\n    })\r\n    this.setState({isVerified : true})\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    this.isStock()\r\n    var d = new Date();\r\n    var h = d.getHours();\r\n    var m = d.getMinutes();\r\n    var currtime = \"2020-01-01 \" + h + \":\" + m\r\n    await this.setState(prevState => ({\r\n        ...prevState,\r\n        createTradedata: {\r\n          BuyingParty: this.state.buyingParty.value,\r\n          SellingParty: this.state.sellingParty.value,\r\n          Product: this.state.productName.value,\r\n          Quantity: this.state.quantity.value,\r\n          NotionalCurrency: this.state.notionalCurrency.value,\r\n          UnderlyingCurrency: this.state.underlyingCurrency.value,\r\n          StrikePrice: this.state.strikePrice.value,\r\n          MaturityDate: this.state.expiryDate.value,\r\n          Tdate: currtime,\r\n          NotionalAmount: this.state.verifiedData.notionalValue,\r\n          UnderlyingPrice: this.state.verifiedData.marketValue\r\n        }\r\n    }))\r\n    axios\r\n      .post(`http://127.0.0.1:5000/trades/edit/${this.state.tradeid}`, this.state.createTradedata)\r\n      .then(response => {\r\n        console.log(response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(\"ERROR: =============\", error.response)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <EdittradeComponent\r\n        showModal={this.showModal}\r\n        handleOk={this.handleOk}\r\n        handleCancel={this.handleCancel}\r\n        handleNotional={this.handleNotional}\r\n        handleNumber={this.handleNumber}\r\n        handleBuyer={this.handleBuyer}\r\n        handleSeller={this.handleSeller}\r\n        handleUnderlying={this.handleUnderlying}\r\n        handleDropdown={this.handleDropdown}\r\n        handleExpirydate={this.handleExpirydate}\r\n        handleExpirytime={this.handleExpirytime}\r\n        handleVerify={this.getVerify}\r\n        enableField={this.enableField}\r\n        disableField={this.disableField}\r\n        data={this.state}\r\n        handleSubmit={this.handleSubmit}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Edittrade;\r\n"]},"metadata":{},"sourceType":"module"}