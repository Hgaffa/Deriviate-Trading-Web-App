{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\dashboard.js\";\nimport React from \"react\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport Dashchart from \"./components/dashchart\";\nvar Option = _Select.Option;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      disabled: true,\n      dataType: \"\",\n      productlist: [\"Car\", \"Oil\", \"Gun\", \"Gold\"],\n      stocklist: [\"Tesla\", \"Apple\", \"eBay\", \"Alibaba\"],\n      currencylist: [\"KYD\", \"USD\", \"GBP\"],\n      options: \"\",\n      fetch: \"\"\n    };\n\n    _this.onChange = function (e) {\n      console.log(\"user has selected to display a \".concat(e.target.value));\n      var options = _this.state.options;\n\n      if (e.target.value == \"product\") {\n        options = _this.state.productlist.map(function (product) {\n          return React.createElement(Option, {\n            key: product,\n            value: product,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, product);\n        });\n\n        _this.setState({\n          options: options,\n          disabled: true\n        });\n      } else if (e.target.value == \"stock\") {\n        options = _this.state.stocklist.map(function (stock) {\n          return React.createElement(Option, {\n            key: stock,\n            value: stock,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, stock);\n        });\n\n        _this.setState({\n          options: options\n        });\n      } else {\n        options = _this.state.currencylist.map(function (currency) {\n          return React.createElement(Option, {\n            key: currency,\n            value: currency,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, currency);\n        });\n\n        _this.setState({\n          options: options\n        });\n      }\n\n      _this.setState({\n        disabled: false,\n        dataType: e.target.value,\n        placeholder: \"Please select \".concat(e.target.value),\n        fetch: \"\"\n      });\n    };\n\n    _this.onSelect = function (e) {\n      console.log(\"user chosen to fetch \".concat(e));\n\n      _this.setState({\n        fetch: e\n      });\n    };\n\n    _this.onFetch = function () {\n      var type = _this.state.dataType;\n      var values = _this.state.fetch;\n      console.log(\"user has requested to fetch \".concat(values, \" from \").concat(type));\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Row, {\n        around: \"xs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        sm: 3,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          marginLeft: 20,\n          marginTop: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Data\"), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(_Radio.Group, {\n        buttonStyle: \"solid\",\n        name: \"productstockcurrency\",\n        size: \"medium\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(_Radio.Button, {\n        value: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Product\"), React.createElement(_Radio.Button, {\n        value: \"stock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(_Radio.Button, {\n        value: \"currency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Currency\"))), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(_Select, {\n        mode: \"multiple\",\n        disabled: this.state.disabled,\n        style: {\n          marginTop: 8,\n          width: \"70%\"\n        },\n        placeholder: this.state.placeholder,\n        onChange: this.onSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.state.options)), React.createElement(Col, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        style: {\n          marginTop: 8\n        },\n        onClick: this.onFetch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Fetch data\"))), React.createElement(Col, {\n        xs: 12,\n        sm: 9,\n        lg: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          marginLeft: 80,\n          marginTop: 20,\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"TSLA / AAPL\"), React.createElement(Dashchart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/dashboard.js"],"names":["React","Row","Col","Dashchart","Option","Dashboard","state","disabled","dataType","productlist","stocklist","currencylist","options","fetch","onChange","e","console","log","target","value","map","product","setState","stock","currency","placeholder","onSelect","onFetch","type","values","textAlign","marginLeft","marginTop","width","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,GAAd,QAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;IAEQC,M,WAAAA,M;;IAEFC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,WAAW,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,MAAtB,CAHP;AAINC,MAAAA,SAAS,EAAE,CAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,EAA2B,SAA3B,CAJL;AAKNC,MAAAA,YAAY,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CALR;AAMNC,MAAAA,OAAO,EAAE,EANH;AAONC,MAAAA,KAAK,EAAE;AAPD,K;;UASRC,Q,GAAW,UAAAC,CAAC,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,0CAA8CF,CAAC,CAACG,MAAF,CAASC,KAAvD;AACA,UAAIP,OAAO,GAAG,MAAKN,KAAL,CAAWM,OAAzB;;AACA,UAAIG,CAAC,CAACG,MAAF,CAASC,KAAT,IAAkB,SAAtB,EAAiC;AAC/BP,QAAAA,OAAO,GAAG,MAAKN,KAAL,CAAWG,WAAX,CAAuBW,GAAvB,CAA2B,UAAAC,OAAO;AAAA,iBAC1C,oBAAC,MAAD;AAAQ,YAAA,GAAG,EAAEA,OAAb;AAAsB,YAAA,KAAK,EAAEA,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,OADH,CAD0C;AAAA,SAAlC,CAAV;;AAKA,cAAKC,QAAL,CAAc;AACZV,UAAAA,OAAO,EAAEA,OADG;AAEZL,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OAVD,MAUO,IAAIQ,CAAC,CAACG,MAAF,CAASC,KAAT,IAAkB,OAAtB,EAA+B;AACpCP,QAAAA,OAAO,GAAG,MAAKN,KAAL,CAAWI,SAAX,CAAqBU,GAArB,CAAyB,UAAAG,KAAK;AAAA,iBACtC,oBAAC,MAAD;AAAQ,YAAA,GAAG,EAAEA,KAAb;AAAoB,YAAA,KAAK,EAAEA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,KADH,CADsC;AAAA,SAA9B,CAAV;;AAKA,cAAKD,QAAL,CAAc;AACZV,UAAAA,OAAO,EAAEA;AADG,SAAd;AAGD,OATM,MASA;AACLA,QAAAA,OAAO,GAAG,MAAKN,KAAL,CAAWK,YAAX,CAAwBS,GAAxB,CAA4B,UAAAI,QAAQ;AAAA,iBAC5C,oBAAC,MAAD;AAAQ,YAAA,GAAG,EAAEA,QAAb;AAAuB,YAAA,KAAK,EAAEA,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGA,QADH,CAD4C;AAAA,SAApC,CAAV;;AAKA,cAAKF,QAAL,CAAc;AACZV,UAAAA,OAAO,EAAEA;AADG,SAAd;AAGD;;AACD,YAAKU,QAAL,CAAc;AACZf,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,QAAQ,EAAEO,CAAC,CAACG,MAAF,CAASC,KAFP;AAGZM,QAAAA,WAAW,0BAAmBV,CAAC,CAACG,MAAF,CAASC,KAA5B,CAHC;AAIZN,QAAAA,KAAK,EAAE;AAJK,OAAd;AAMD,K;;UAEDa,Q,GAAW,UAAAX,CAAC,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,gCAAoCF,CAApC;;AACA,YAAKO,QAAL,CAAc;AACZT,QAAAA,KAAK,EAAEE;AADK,OAAd;AAGD,K;;UAEDY,O,GAAU,YAAM;AACd,UAAIC,IAAI,GAAG,MAAKtB,KAAL,CAAWE,QAAtB;AACA,UAAIqB,MAAM,GAAG,MAAKvB,KAAL,CAAWO,KAAxB;AACAG,MAAAA,OAAO,CAACC,GAAR,uCAA2CY,MAA3C,mBAA0DD,IAA1D;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAS,QAAA,KAAK,EAAE;AAAEE,UAAAA,SAAS,EAAE;AAAb,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE,EAAd;AAAkBC,UAAAA,SAAS,EAAE;AAA7B,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,2BAAO,KAAP;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,IAAI,EAAC,sBAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,QAAQ,EAAE,KAAKlB,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,2BAAO,MAAP;AAAc,QAAA,KAAK,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANF,EAOE,2BAAO,MAAP;AAAc,QAAA,KAAK,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,EAQE,2BAAO,MAAP;AAAc,QAAA,KAAK,EAAC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADA,CAJF,EAgBE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,QAFvB;AAGE,QAAA,KAAK,EAAE;AAAEyB,UAAAA,SAAS,EAAE,CAAb;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAHT;AAIE,QAAA,WAAW,EAAE,KAAK3B,KAAL,CAAWmB,WAJ1B;AAKE,QAAA,QAAQ,EAAE,KAAKC,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG,KAAKpB,KAAL,CAAWM,OAPd,CADA,CAhBF,EA2BE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AACE,QAAA,KAAK,EAAE;AAAEoB,UAAAA,SAAS,EAAE;AAAb,SADT;AAEE,QAAA,OAAO,EAAE,KAAKL,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,CA3BF,CADF,EAmCE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,CAAjB;AAAoB,QAAA,EAAE,EAAE,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAE;AAAEI,UAAAA,UAAU,EAAE,EAAd;AAAkBC,UAAAA,SAAS,EAAE,EAA7B;AAAiCF,UAAAA,SAAS,EAAE;AAA5C,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAnCF,CADF,CADF;AA8CD;;;;EA9GqB9B,KAAK,CAACkC,S;;AAiH9B,eAAe7B,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Drawer, Radio, Select } from \"antd\";\r\nimport { Row, Col } from \"react-flexbox-grid\";\r\nimport Dashchart from \"./components/dashchart\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    disabled: true,\r\n    dataType: \"\",\r\n    productlist: [\"Car\", \"Oil\", \"Gun\", \"Gold\"],\r\n    stocklist: [\"Tesla\", \"Apple\", \"eBay\", \"Alibaba\"],\r\n    currencylist: [\"KYD\", \"USD\", \"GBP\"],\r\n    options: \"\",\r\n    fetch: \"\"\r\n  };\r\n  onChange = e => {\r\n    console.log(`user has selected to display a ${e.target.value}`);\r\n    var options = this.state.options;\r\n    if (e.target.value == \"product\") {\r\n      options = this.state.productlist.map(product => (\r\n        <Option key={product} value={product}>\r\n          {product}\r\n        </Option>\r\n      ));\r\n      this.setState({\r\n        options: options,\r\n        disabled: true\r\n      });\r\n    } else if (e.target.value == \"stock\") {\r\n      options = this.state.stocklist.map(stock => (\r\n        <Option key={stock} value={stock}>\r\n          {stock}\r\n        </Option>\r\n      ));\r\n      this.setState({\r\n        options: options\r\n      });\r\n    } else {\r\n      options = this.state.currencylist.map(currency => (\r\n        <Option key={currency} value={currency}>\r\n          {currency}\r\n        </Option>\r\n      ));\r\n      this.setState({\r\n        options: options\r\n      });\r\n    }\r\n    this.setState({\r\n      disabled: false,\r\n      dataType: e.target.value,\r\n      placeholder: `Please select ${e.target.value}`,\r\n      fetch: \"\"\r\n    });\r\n  };\r\n\r\n  onSelect = e => {\r\n    console.log(`user chosen to fetch ${e}`)\r\n    this.setState({\r\n      fetch: e\r\n    })\r\n  }\r\n\r\n  onFetch = () => {\r\n    var type = this.state.dataType\r\n    var values = this.state.fetch\r\n    console.log(`user has requested to fetch ${values} from ${type}`)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section style={{ textAlign: \"center\" }}>\r\n        <Row around=\"xs\">\r\n          <Col xs={12} sm={3} lg={3}>\r\n            <h2 style={{ marginLeft: 20, marginTop: 20 }}>\r\n              Data\r\n            </h2>\r\n            <Col xs={12}>\r\n            <Radio.Group\r\n              buttonStyle=\"solid\"\r\n              name=\"productstockcurrency\"\r\n              size=\"medium\"\r\n              onChange={this.onChange}\r\n            >\r\n              <Radio.Button value=\"product\">Product</Radio.Button>\r\n              <Radio.Button value=\"stock\">Stock</Radio.Button>\r\n              <Radio.Button value=\"currency\">Currency</Radio.Button>\r\n            </Radio.Group>\r\n            </Col>\r\n            <Col xs={12}>\r\n            <Select\r\n              mode=\"multiple\"\r\n              disabled={this.state.disabled}\r\n              style={{ marginTop: 8, width: \"70%\" }}\r\n              placeholder={this.state.placeholder}\r\n              onChange={this.onSelect}\r\n            >\r\n              {this.state.options}\r\n            </Select>\r\n            </Col>\r\n            <Col xs={12}>\r\n            <Button\r\n              style={{ marginTop: 8 }}\r\n              onClick={this.onFetch}\r\n            >Fetch data</Button>\r\n            </Col>\r\n          </Col>\r\n          <Col xs={12} sm={9} lg={9}>\r\n            <h2 style={{ marginLeft: 80, marginTop: 20, textAlign: \"left\" }}>\r\n              TSLA / AAPL\r\n            </h2>\r\n            <Dashchart />\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}