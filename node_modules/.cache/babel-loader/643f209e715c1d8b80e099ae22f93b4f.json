{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\components\\\\alertlist.js\";\nimport React from \"react\";\nimport { WarningOutlined } from \"@ant-design/icons\";\nimport Viewtrade from \"./viewtrade\";\nimport axios from \"axios\"; //Specific antd elements imported\n\nvar Alertlist =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Alertlist, _React$Component);\n\n  function Alertlist() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Alertlist);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Alertlist)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errorTrades: [],\n      sensitivity: _this.props.sensitivity\n    };\n    return _this;\n  }\n\n  _createClass(Alertlist, [{\n    key: \"componentDidMount\",\n    //API get request to get the list of trades that have been flagged by machine learning from backend. This will be dispalyed as alerts.\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://127.0.0.1:5000/trades/badTrades/list\").then(function (response) {\n                  _this2.setState({\n                    errorTrades: response.data.result\n                  });\n\n                  console.log(response.data);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //This displays the flagged trades as alerts in the notificatications screen. Each trade will have its only clickable link on its tradeid which will call the viewtrade componenet to view the trades information\n    //and available actions.\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.state.errorTrades.map(function (trade) {\n        return React.createElement(_Card, {\n          style: {\n            marginTop: 8,\n            background: \"#fffbe6\",\n            outline: \"#ffe58f solid 1px\"\n          },\n          key: trade,\n          bordered: false,\n          size: \"small\",\n          type: \"warning\",\n          showIcon: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(WarningOutlined, {\n          style: {\n            color: \"#faad14\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            marginLeft: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Error detected for trade \"), React.createElement(Viewtrade, {\n          tradeid: trade,\n          ignore: true,\n          sensitivity: _this3.state.sensitivity,\n          updateSens: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Alertlist;\n}(React.Component);\n\nexport default Alertlist;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/components/alertlist.js"],"names":["React","WarningOutlined","Viewtrade","axios","Alertlist","state","errorTrades","sensitivity","props","get","then","response","setState","data","result","console","log","catch","error","map","trade","marginTop","background","outline","color","marginLeft","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,WAAW,EAAE,MAAKC,KAAL,CAAWD;AAFlB,K;;;;;;AAKR;;;;;;;;;;;;uBAEUJ,KAAK,CAACM,GAAN,CAAU,6CAAV,EACHC,IADG,CACE,UAAAC,QAAQ,EAAI;AAChB,kBAAA,MAAI,CAACC,QAAL,CAAc;AAAEN,oBAAAA,WAAW,EAAGK,QAAQ,CAACE,IAAT,CAAcC;AAA9B,mBAAd;;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAArB;AACD,iBAJG,EAKHI,KALG,CAKG,UAAAC,KAAK,EAAI;AACdH,kBAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,iBAPG,C;;;;;;;;;;;;;;;QAUV;AACA;;;;6BACS;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKb,KAAL,CAAWC,WAAX,CAAuBa,GAAvB,CAA2B,UAAAC,KAAK;AAAA,eAC/B;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAE,CADN;AAELC,YAAAA,UAAU,EAAE,SAFP;AAGLC,YAAAA,OAAO,EAAE;AAHJ,WADT;AAME,UAAA,GAAG,EAAEH,KANP;AAOE,UAAA,QAAQ,EAAE,KAPZ;AAQE,UAAA,IAAI,EAAC,OARP;AASE,UAAA,IAAI,EAAC,SATP;AAUE,UAAA,QAAQ,MAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAYE,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAE;AAAEI,YAAAA,KAAK,EAAE;AAAT,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF,EAaG;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAbH,EAcE,oBAAC,SAAD;AAAW,UAAA,OAAO,EAAEL,KAApB;AAA2B,UAAA,MAAM,EAAE,IAAnC;AAAyC,UAAA,WAAW,EAAE,MAAI,CAACf,KAAL,CAAWE,WAAjE;AAA8E,UAAA,UAAU,EAAE,KAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdF,CAD+B;AAAA,OAAhC,CADH,CADF;AAsBD;;;;EA3CqBP,KAAK,CAAC0B,S;;AA6C9B,eAAetB,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport { WarningOutlined } from \"@ant-design/icons\";\r\nimport Viewtrade from \"./viewtrade\";\r\nimport axios from \"axios\";\r\n//Specific antd elements imported\r\n\r\nclass Alertlist extends React.Component {\r\n  state = {\r\n    errorTrades: [],\r\n    sensitivity: this.props.sensitivity\r\n  };\r\n\r\n  //API get request to get the list of trades that have been flagged by machine learning from backend. This will be dispalyed as alerts.\r\n  async componentDidMount(){\r\n      await axios.get(\"http://127.0.0.1:5000/trades/badTrades/list\")\r\n        .then(response => {\r\n          this.setState({ errorTrades : response.data.result})\r\n          console.log(response.data)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n  }\r\n\r\n  //This displays the flagged trades as alerts in the notificatications screen. Each trade will have its only clickable link on its tradeid which will call the viewtrade componenet to view the trades information\r\n  //and available actions.\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.errorTrades.map(trade => (\r\n          <Card\r\n            style={{\r\n              marginTop: 8,\r\n              background: \"#fffbe6\",\r\n              outline: \"#ffe58f solid 1px\"\r\n            }}\r\n            key={trade}\r\n            bordered={false}\r\n            size=\"small\"\r\n            type=\"warning\"\r\n            showIcon\r\n          >\r\n            <WarningOutlined style={{ color: \"#faad14\" }} />\r\n            {<span style={{ marginLeft: 8 }}>Error detected for trade </span>}\r\n            <Viewtrade tradeid={trade} ignore={true} sensitivity={this.state.sensitivity} updateSens={false}/>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Alertlist;\r\n"]},"metadata":{},"sourceType":"module"}