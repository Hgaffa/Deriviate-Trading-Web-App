{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/typography/style\";\nimport _Typography from \"antd/es/typography\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\components\\\\reportgenerate.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nvar Title = _Typography.Title; //This file generates thee reports for chosen dates in the reports page.\n\nvar ReportGenerate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportGenerate, _React$Component);\n\n  function ReportGenerate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReportGenerate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReportGenerate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      date: _this.props.match.params.date,\n      now: new Date(),\n      data: [],\n      datePicked: _this.props.location.state.datePicked\n    };\n    return _this;\n  }\n\n  _createClass(ReportGenerate, [{\n    key: \"addTags\",\n    //Function to add tag property to fetcheed data to show whether trades or Active/Inactive\n    value: function addTags() {\n      var data = this.state.data.map(function (e) {\n        e.Tags = moment(e.MaturityDate, \"YYYY-MM-DD\") < moment(\"2020-01-01\", \"YYYY-MM-DD\") ? [\"Inactive\"] : [\"Active\"];\n        return e;\n      });\n      this.setState({\n        data: data\n      });\n    } //Fetches all trades on the chosen data or all data betweeeen two dates if an inteerval was chosen\n\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.state.datePicked == \"\")) {\n                  _context.next = 4;\n                  break;\n                }\n\n                axios.get(\"http://127.0.0.1:5000/trades/getBulk/onDate/\".concat(this.state.date)).then(function (response) {\n                  _this2.setState({\n                    data: response.data.result\n                  }, function () {\n                    _this2.addTags();\n                  });\n\n                  console.log(response.data.result);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n                _context.next = 7;\n                break;\n\n              case 4:\n                this.setState({\n                  date: this.state.datePicked[0] + \" - \" + this.state.datePicked[1]\n                });\n                _context.next = 7;\n                return axios.get(\"http://127.0.0.1:5000/trades/getBulk/betweenDate/\".concat(this.state.datePicked[0], \"/\").concat(this.state.datePicked[1])).then(function (response) {\n                  _this2.setState({\n                    data: response.data.result\n                  });\n\n                  console.log(response.data.result);\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 7:\n                console.log(\"get report for date \".concat(this.state.data));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //Creates columns for the table and displays them\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var columns = [{\n        title: \"Trade ID\",\n        dataIndex: \"TradeID\",\n        key: \"TradeID\"\n      }, {\n        title: \"Buying party\",\n        dataIndex: \"BuyingParty\",\n        key: \"BuyingParty\"\n      }, {\n        title: \"Selling party\",\n        dataIndex: \"SellingParty\",\n        key: \"SellingParty\"\n      }, {\n        title: \"Product\",\n        dataIndex: \"Product\",\n        key: \"Product\"\n      }, {\n        title: \"Quantity\",\n        dataIndex: \"Quantity\",\n        key: \"Quantity\"\n      }, {\n        title: \"Notional currency\",\n        dataIndex: \"NotionalCurrency\",\n        key: \"NotionalCurrency\"\n      }, {\n        title: \"Underlying currency\",\n        dataIndex: \"UnderlyingCurrency\",\n        key: \"UnderlyingCurrency\"\n      }, {\n        title: \"Strike price\",\n        dataIndex: \"StrikePrice\",\n        key: \"StrikePrice\"\n      }, {\n        title: \"Notional Amount\",\n        dataIndex: \"NotionalAmount\",\n        key: \"NotionalAmount\"\n      }, {\n        title: \"Expiry date\",\n        dataIndex: \"MaturityDate\",\n        key: \"MaturityDate\"\n      }, {\n        title: \"Trade date\",\n        dataIndex: \"Tdate\",\n        key: \"Tdate\"\n      }, {\n        title: \"Underlying Price\",\n        dataIndex: \"UnderlyingPrice\",\n        key: \"UnderlyingPrice\"\n      }, {\n        title: \"Active/Inactive\",\n        key: \"Tags\",\n        dataIndex: \"Tags\"\n      }];\n      return React.createElement(\"section\", {\n        style: {\n          margin: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Trade report for \".concat(this.state.date)), \"Report generated on \", this.state.now.toLocaleDateString(\"zh-CN\"), \" at \", this.state.now.toLocaleTimeString(), React.createElement(_Table, {\n        dataSource: this.state.data,\n        columns: columns,\n        rowKey: \"TradeID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ReportGenerate;\n}(React.Component);\n\nexport default ReportGenerate;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/components/reportgenerate.js"],"names":["React","axios","moment","Title","ReportGenerate","state","date","props","match","params","now","Date","data","datePicked","location","map","e","Tags","MaturityDate","setState","get","then","response","result","addTags","console","log","catch","error","columns","title","dataIndex","key","margin","toLocaleDateString","toLocaleTimeString","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;IAEQC,K,eAAAA,K,EAER;;IACMC,c;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,IADxB;AAENI,MAAAA,GAAG,EAAE,IAAIC,IAAJ,EAFC;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,UAAU,EAAE,MAAKN,KAAL,CAAWO,QAAX,CAAoBT,KAApB,CAA0BQ;AAJhC,K;;;;;;AAOR;8BACS;AACP,UAAID,IAAI,GAAG,KAAKP,KAAL,CAAWO,IAAX,CAAgBG,GAAhB,CAAoB,UAACC,CAAD,EAAO;AACpCA,QAAAA,CAAC,CAACC,IAAF,GAAUf,MAAM,CAACc,CAAC,CAACE,YAAH,EAAiB,YAAjB,CAAN,GAAuChB,MAAM,CAAC,YAAD,EAAe,YAAf,CAA9C,GAA8E,CAAC,UAAD,CAA9E,GAA6F,CAAC,QAAD,CAAtG;AACA,eAAOc,CAAP;AACD,OAHU,CAAX;AAIA,WAAKG,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAGA;AAAT,OAAd;AACD,K,CAED;;;;;;;;;;;;;;sBAEM,KAAKP,KAAL,CAAWQ,UAAX,IAAyB,E;;;;;AAC3BZ,gBAAAA,KAAK,CAACmB,GAAN,uDAAyD,KAAKf,KAAL,CAAWC,IAApE,GACGe,IADH,CACS,UAAAC,QAAQ,EAAI;AACjB,kBAAA,MAAI,CAACH,QAAL,CAAc;AAACP,oBAAAA,IAAI,EAAGU,QAAQ,CAACV,IAAT,CAAcW;AAAtB,mBAAd,EACA,YAAM;AACJ,oBAAA,MAAI,CAACC,OAAL;AACD,mBAHD;;AAIAC,kBAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACV,IAAT,CAAcW,MAA1B;AACD,iBAPH,EAQGI,KARH,CAQS,UAAAC,KAAK,EAAI;AACdH,kBAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,iBAVH;;;;;AAYA,qBAAKT,QAAL,CAAc;AAAEb,kBAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,IAA2B,KAA3B,GAAmC,KAAKR,KAAL,CAAWQ,UAAX,CAAsB,CAAtB;AAA3C,iBAAd;;uBACMZ,KAAK,CAACmB,GAAN,4DAA8D,KAAKf,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,CAA9D,cAA0F,KAAKR,KAAL,CAAWQ,UAAX,CAAsB,CAAtB,CAA1F,GACHQ,IADG,CACG,UAAAC,QAAQ,EAAI;AACjB,kBAAA,MAAI,CAACH,QAAL,CAAc;AAACP,oBAAAA,IAAI,EAAGU,QAAQ,CAACV,IAAT,CAAcW;AAAtB,mBAAd;;AACAE,kBAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACV,IAAT,CAAcW,MAA1B;AACD,iBAJG,EAKHI,KALG,CAKG,UAAAC,KAAK,EAAI;AACdH,kBAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,iBAPG,C;;;AASRH,gBAAAA,OAAO,CAACC,GAAR,+BAAmC,KAAKrB,KAAL,CAAWO,IAA9C;;;;;;;;;;;;;;;QAEF;;;;6BACS;AACP,UAAMiB,OAAO,GAAG,CACd;AACEC,QAAAA,KAAK,EAAE,UADT;AAEEC,QAAAA,SAAS,EAAE,SAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OADc,EAMd;AACEF,QAAAA,KAAK,EAAE,cADT;AAEEC,QAAAA,SAAS,EAAE,aAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OANc,EAWd;AACEF,QAAAA,KAAK,EAAE,eADT;AAEEC,QAAAA,SAAS,EAAE,cAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OAXc,EAgBd;AACEF,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,SAAS,EAAE,SAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OAhBc,EAqBd;AACEF,QAAAA,KAAK,EAAE,UADT;AAEEC,QAAAA,SAAS,EAAE,UAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OArBc,EA0Bd;AACEF,QAAAA,KAAK,EAAE,mBADT;AAEEC,QAAAA,SAAS,EAAE,kBAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OA1Bc,EA+Bd;AACEF,QAAAA,KAAK,EAAE,qBADT;AAEEC,QAAAA,SAAS,EAAE,oBAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OA/Bc,EAoCd;AACEF,QAAAA,KAAK,EAAE,cADT;AAEEC,QAAAA,SAAS,EAAE,aAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OApCc,EAyCd;AACEF,QAAAA,KAAK,EAAE,iBADT;AAEEC,QAAAA,SAAS,EAAE,gBAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OAzCc,EA8Cd;AACEF,QAAAA,KAAK,EAAE,aADT;AAEEC,QAAAA,SAAS,EAAE,cAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OA9Cc,EAmDd;AACEF,QAAAA,KAAK,EAAE,YADT;AAEEC,QAAAA,SAAS,EAAE,OAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OAnDc,EAwDd;AACEF,QAAAA,KAAK,EAAE,kBADT;AAEEC,QAAAA,SAAS,EAAE,iBAFb;AAGEC,QAAAA,GAAG,EAAE;AAHP,OAxDc,EA6Dd;AACEF,QAAAA,KAAK,EAAE,iBADT;AAEEE,QAAAA,GAAG,EAAE,MAFP;AAGED,QAAAA,SAAS,EAAE;AAHb,OA7Dc,CAAhB;AAmEA,aACE;AAAS,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAE;AAAV,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAA4B,KAAK5B,KAAL,CAAWC,IAAvC,EADF,EAEG,sBAFH,EAGG,KAAKD,KAAL,CAAWK,GAAX,CAAewB,kBAAf,CAAkC,OAAlC,CAHH,EAIG,MAJH,EAKG,KAAK7B,KAAL,CAAWK,GAAX,CAAeyB,kBAAf,EALH,EAME;AAAO,QAAA,UAAU,EAAE,KAAK9B,KAAL,CAAWO,IAA9B;AAAoC,QAAA,OAAO,EAAEiB,OAA7C;AAAsD,QAAA,MAAM,EAAC,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAUD;;;;EA3H0B7B,KAAK,CAACoC,S;;AA8HnC,eAAehC,cAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\"\r\nimport { Typography, Button, Table, Tag } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\n//This file generates thee reports for chosen dates in the reports page.\r\nclass ReportGenerate extends React.Component {\r\n  state = {\r\n    date: this.props.match.params.date,\r\n    now: new Date(),\r\n    data: [],\r\n    datePicked: this.props.location.state.datePicked\r\n  }\r\n\r\n  //Function to add tag property to fetcheed data to show whether trades or Active/Inactive\r\n  addTags(){\r\n    let data = this.state.data.map((e) => {\r\n      e.Tags = (moment(e.MaturityDate, \"YYYY-MM-DD\") < moment(\"2020-01-01\", \"YYYY-MM-DD\")) ? [\"Inactive\"] : [\"Active\"]\r\n      return e\r\n    })\r\n    this.setState({ data : data})\r\n  }\r\n\r\n  //Fetches all trades on the chosen data or all data betweeeen two dates if an inteerval was chosen\r\n  async componentDidMount() {\r\n    if (this.state.datePicked == \"\"){\r\n      axios.get(`http://127.0.0.1:5000/trades/getBulk/onDate/${this.state.date}`)\r\n        .then( response => {\r\n          this.setState({data : response.data.result},\r\n          () => {\r\n            this.addTags();\r\n          })\r\n          console.log(response.data.result)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    } else {\r\n      this.setState({ date: this.state.datePicked[0] + \" - \" + this.state.datePicked[1]})\r\n      await axios.get(`http://127.0.0.1:5000/trades/getBulk/betweenDate/${this.state.datePicked[0]}/${this.state.datePicked[1]}`)\r\n        .then( response => {\r\n          this.setState({data : response.data.result})\r\n          console.log(response.data.result)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    }\r\n    console.log(`get report for date ${this.state.data}`);\r\n  }\r\n  //Creates columns for the table and displays them\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Trade ID\",\r\n        dataIndex: \"TradeID\",\r\n        key: \"TradeID\"\r\n      },\r\n      {\r\n        title: \"Buying party\",\r\n        dataIndex: \"BuyingParty\",\r\n        key: \"BuyingParty\"\r\n      },\r\n      {\r\n        title: \"Selling party\",\r\n        dataIndex: \"SellingParty\",\r\n        key: \"SellingParty\"\r\n      },\r\n      {\r\n        title: \"Product\",\r\n        dataIndex: \"Product\",\r\n        key: \"Product\"\r\n      },\r\n      {\r\n        title: \"Quantity\",\r\n        dataIndex: \"Quantity\",\r\n        key: \"Quantity\"\r\n      },\r\n      {\r\n        title: \"Notional currency\",\r\n        dataIndex: \"NotionalCurrency\",\r\n        key: \"NotionalCurrency\"\r\n      },\r\n      {\r\n        title: \"Underlying currency\",\r\n        dataIndex: \"UnderlyingCurrency\",\r\n        key: \"UnderlyingCurrency\"\r\n      },\r\n      {\r\n        title: \"Strike price\",\r\n        dataIndex: \"StrikePrice\",\r\n        key: \"StrikePrice\"\r\n      },\r\n      {\r\n        title: \"Notional Amount\",\r\n        dataIndex: \"NotionalAmount\",\r\n        key: \"NotionalAmount\"\r\n      },\r\n      {\r\n        title: \"Expiry date\",\r\n        dataIndex: \"MaturityDate\",\r\n        key: \"MaturityDate\"\r\n      },\r\n      {\r\n        title: \"Trade date\",\r\n        dataIndex: \"Tdate\",\r\n        key: \"Tdate\"\r\n      },\r\n      {\r\n        title: \"Underlying Price\",\r\n        dataIndex: \"UnderlyingPrice\",\r\n        key: \"UnderlyingPrice\"\r\n      },\r\n      {\r\n        title: \"Active/Inactive\",\r\n        key: \"Tags\",\r\n        dataIndex: \"Tags\"\r\n      }\r\n    ];\r\n    return (\r\n      <section style={{ margin: 20 }}>\r\n        <Title>{`Trade report for ${this.state.date}`}</Title>\r\n        {\"Report generated on \"}\r\n        {this.state.now.toLocaleDateString(\"zh-CN\")}\r\n        {\" at \"}\r\n        {this.state.now.toLocaleTimeString()}\r\n        <Table dataSource={this.state.data} columns={columns} rowKey='TradeID' />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportGenerate;\r\n"]},"metadata":{},"sourceType":"module"}