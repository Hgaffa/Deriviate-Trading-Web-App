{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/date-picker/style\";\nimport _DatePicker from \"antd/es/date-picker\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\components\\\\edittradeComponent.js\";\nimport React from \"react\";\nimport momen from \"moment\";\nimport { Row } from \"react-flexbox-grid\";\nvar Option = _Select.Option;\n\nvar onFinish = function onFinish(values) {\n  values.preventDefault();\n  console.log(\"form inputs recieved:\", values);\n};\n\nfunction disabledDate(current) {\n  return current && current.valueOf() < moment(\"2020-01-01\", \"YYYY-MM-DD\");\n}\n\nfunction EdittradeComponent(props) {\n  var isDisabled = props.data.buyingParty.valid == \"error\" || props.data.sellingParty.valid == \"error\" || props.data.quantity.valid == \"error\" || props.data.strikePrice.valid == \"error\";\n  var isFilled = props.data.buyingParty.value.length > 0 && props.data.sellingParty.value.length > 0 && props.data.quantity.value > 0 && props.data.strikePrice.value > 0 && props.data.underlyingCurrency.value.length > 0 && props.data.notionalCurrency.value.length > 0 && props.data.productStock.value.length > 0 && props.data.expiryDate.value.length > 0;\n  var isProduct = props.data.productStock.value == \"Product\" && props.data.productName.value.length > 0 || props.data.productStock.value == \"Stocks\";\n  var formCompleted = !isDisabled && isFilled && isProduct ? true : false;\n\n  if (formCompleted === true) {\n    //This will log all of the form data to show that we have correctly saved form fields to state\n    console.log(\"THESE ARE THE FORM VALUES:\");\n    console.log(\"Buying Party: \".concat(props.data.buyingParty.value));\n    console.log(\"Selling Party: \".concat(props.data.sellingParty.value));\n    console.log(\"Product/Stock: \".concat(props.data.productStock.value));\n    console.log(\"Product Name: \".concat(props.data.productName.value));\n    console.log(\"Quantity: \".concat(props.data.quantity.value));\n    console.log(\"Underlying Currency: \".concat(props.data.underlyingCurrency.value));\n    console.log(\"Notional Currency: \".concat(props.data.notionalCurrency.value));\n    console.log(\"Strike Price: \".concat(props.data.strikePrice.value));\n    console.log(\"Expiry Date: \".concat(props.data.expiryDate.value));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(_Button, {\n    key: \"edit\",\n    type: \"primary\",\n    onClick: props.showModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(_Modal, {\n    width: 700,\n    closable: false,\n    visible: props.data.visible,\n    title: \"Add a new trade\",\n    footer: null,\n    onOk: props.handleOk,\n    onCancel: props.handleCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: 16,\n      marginLeft: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Row, {\n    around: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(_Form, {\n    layout: \"inline\",\n    onSubmit: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"Buying party:\",\n    validateStatus: props.data.buyingParty.valid,\n    help: props.data.buyingParty.help,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(_Select, {\n    showSearch: true,\n    style: {\n      width: 170\n    },\n    placeholder: \"Yourself\",\n    name: \"buyingParty\",\n    onChange: props.handleBuyer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, props.data.companyList.map(function (company) {\n    return React.createElement(Option, {\n      key: company,\n      value: company,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, company);\n  }))), React.createElement(_Form.Item, {\n    label: \"Selling party:\",\n    validateStatus: props.data.sellingParty.valid,\n    help: props.data.sellingParty.help,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(_Select, {\n    showSearch: true,\n    style: {\n      width: 170\n    },\n    placeholder: \"Them\",\n    name: \"sellingParty\",\n    onChange: props.handleSeller,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, props.data.companyList.map(function (company) {\n    return React.createElement(Option, {\n      key: company,\n      value: company,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, company);\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    label: \"Product / Stock:\",\n    style: {\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(_Radio.Group, {\n    buttonStyle: \"solid\",\n    name: \"productStock\",\n    onChange: props.handleNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(_Radio.Button, {\n    value: \"Product\",\n    onClick: props.enableField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Product\"), React.createElement(_Radio.Button, {\n    value: \"Stocks\",\n    onClick: props.disableField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Stock\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    label: \"Product name: \",\n    style: {\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(_Select, {\n    disabled: props.data.disabled,\n    showSearch: true,\n    style: {\n      width: 170\n    },\n    placeholder: \"Product name\",\n    filterOption: function filterOption(input, option) {\n      return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n    },\n    onChange: props.handleDropdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, props.data.productList.map(function (product) {\n    return React.createElement(Option, {\n      key: product,\n      value: product,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, product);\n  }))), React.createElement(_Form.Item, {\n    label: \"Quantity: \",\n    style: {\n      marginTop: 16\n    },\n    validateStatus: props.data.quantity.valid,\n    help: props.data.quantity.help,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    name: \"quantity\" // value={props.data.quantity.value}\n    ,\n    onChange: props.handleNumber,\n    style: {\n      width: 170\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    label: \"Notional currency: \",\n    style: {\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(_Select, {\n    showSearch: true,\n    style: {\n      width: 170\n    },\n    placeholder: \"Currency\",\n    onChange: props.handleNotional,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, props.data.currencyList.map(function (currency) {\n    return React.createElement(Option, {\n      key: currency,\n      value: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, currency);\n  }))), React.createElement(_Form.Item, {\n    label: \"Underlying currency: \",\n    style: {\n      marginTop: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(_Select, {\n    showSearch: true,\n    style: {\n      width: 170\n    },\n    placeholder: \"Currency\",\n    onChange: props.handleUnderlying,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, props.data.currencyList.map(function (currency) {\n    return React.createElement(Option, {\n      key: currency,\n      value: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, currency);\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }), React.createElement(Row, {\n    around: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    style: {\n      textAlign: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, React.createElement(_Form.Item, {\n    label: \"Strike Price: \",\n    style: {\n      marginTop: 16\n    },\n    validateStatus: props.data.strikePrice.valid,\n    help: props.data.strikePrice.help,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(_Input, {\n    style: {\n      width: 140\n    },\n    name: \"strikePrice\",\n    value: props.data.strikePrice.value,\n    onChange: props.handleNumber,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"ant-form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \" \", props.data.notionalCurrency.value.toUpperCase())), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    label: \"Market value: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"ant-form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, \" \", props.data.verifiedData.marketValue // should come from api after Verify button is clicked\n  , \" \", props.data.underlyingCurrency.value.toUpperCase())), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    label: \"Notional value: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"ant-form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \" \", props.data.verifiedData.notionalValue // should come from api after Verify button is clicked\n  , \" \", props.data.notionalCurrency.value.toUpperCase())), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    label: \"Current price: \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"ant-form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \" \", props.data.verifiedData.currentValue // should come from api after Verify button is clicked\n  , \" \", props.data.underlyingCurrency.value.toUpperCase())))), React.createElement(_Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    name: \"date-picker\",\n    label: \"Expiry date:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, React.createElement(_DatePicker, {\n    onChange: props.handleExpirydate,\n    disabledDate: disabledDate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }), React.createElement(_Button, {\n    type: \"primary\",\n    ghost: true,\n    onClick: props.handleVerify,\n    style: {\n      marginTop: 16\n    },\n    disabled: !formCompleted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, \"Verify\"), React.createElement(_Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }), React.createElement(_Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !props.data.isVerified,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Confirm\"), React.createElement(_Popconfirm, {\n    title: \"Are you sure you want to cancel?\",\n    onConfirm: props.handleCancel,\n    okText: \"Yes\",\n    cancelText: \"No\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(_Button, {\n    style: {\n      marginLeft: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, \"Cancel\"))))))));\n}\n\nexport default EdittradeComponent;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/components/edittradeComponent.js"],"names":["React","momen","Row","Option","onFinish","values","preventDefault","console","log","disabledDate","current","valueOf","moment","EdittradeComponent","props","isDisabled","data","buyingParty","valid","sellingParty","quantity","strikePrice","isFilled","value","length","underlyingCurrency","notionalCurrency","productStock","expiryDate","isProduct","productName","formCompleted","showModal","visible","handleOk","handleCancel","textAlign","marginTop","marginLeft","handleSubmit","help","width","handleBuyer","companyList","map","company","handleSeller","handleNumber","enableField","disableField","disabled","input","option","children","toLowerCase","indexOf","handleDropdown","productList","product","handleNotional","currencyList","currency","handleUnderlying","toUpperCase","verifiedData","marketValue","notionalValue","currentValue","handleExpirydate","handleVerify","isVerified"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport momen from \"moment\";\r\nimport {\r\n  Divider,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  DatePicker,\r\n  TimePicker,\r\n  Button,\r\n  Radio,\r\n  Modal,\r\n  Popconfirm\r\n} from \"antd\";\r\nimport { Row } from \"react-flexbox-grid\";\r\n\r\nconst { Option } = Select;\r\nconst onFinish = values => {\r\n  values.preventDefault();\r\n  console.log(\"form inputs recieved:\", values);\r\n};\r\n\r\nfunction disabledDate(current) {\r\n  return current && current.valueOf() < moment(\"2020-01-01\", \"YYYY-MM-DD\");\r\n}\r\n\r\nfunction EdittradeComponent(props) {\r\n  var isDisabled =\r\n    props.data.buyingParty.valid == \"error\" ||\r\n    props.data.sellingParty.valid == \"error\" ||\r\n    props.data.quantity.valid == \"error\" ||\r\n    props.data.strikePrice.valid == \"error\";\r\n  var isFilled =\r\n    props.data.buyingParty.value.length > 0 &&\r\n    props.data.sellingParty.value.length > 0 &&\r\n    props.data.quantity.value > 0 &&\r\n    props.data.strikePrice.value > 0 &&\r\n    props.data.underlyingCurrency.value.length > 0 &&\r\n    props.data.notionalCurrency.value.length > 0 &&\r\n    props.data.productStock.value.length > 0 &&\r\n    props.data.expiryDate.value.length > 0;\r\n  var isProduct =\r\n    (props.data.productStock.value == \"Product\" &&\r\n      props.data.productName.value.length > 0) ||\r\n    props.data.productStock.value == \"Stocks\";\r\n  var formCompleted = !isDisabled && isFilled && isProduct ? true : false;\r\n  if (formCompleted === true) {\r\n    //This will log all of the form data to show that we have correctly saved form fields to state\r\n    console.log(\"THESE ARE THE FORM VALUES:\");\r\n    console.log(`Buying Party: ${props.data.buyingParty.value}`);\r\n    console.log(`Selling Party: ${props.data.sellingParty.value}`);\r\n    console.log(`Product/Stock: ${props.data.productStock.value}`);\r\n    console.log(`Product Name: ${props.data.productName.value}`);\r\n    console.log(`Quantity: ${props.data.quantity.value}`);\r\n    console.log(`Underlying Currency: ${props.data.underlyingCurrency.value}`);\r\n    console.log(`Notional Currency: ${props.data.notionalCurrency.value}`);\r\n    console.log(`Strike Price: ${props.data.strikePrice.value}`);\r\n    console.log(`Expiry Date: ${props.data.expiryDate.value}`);\r\n  }\r\n  return (\r\n    <>\r\n      <Button key=\"edit\" type=\"primary\" onClick={props.showModal}>\r\n        Edit\r\n      </Button>\r\n      <Modal\r\n        width={700}\r\n        closable={false}\r\n        visible={props.data.visible}\r\n        title=\"Add a new trade\"\r\n        footer={null}\r\n        onOk={props.handleOk}\r\n        onCancel={props.handleCancel}\r\n      >\r\n        <section style={{ textAlign: \"center\", marginTop: 16, marginLeft: 20 }}>\r\n          <Row around=\"xs\">\r\n            <Form layout=\"inline\" onSubmit={props.handleSubmit}>\r\n              <Form.Item\r\n                label=\"Buying party:\"\r\n                validateStatus={props.data.buyingParty.valid}\r\n                help={props.data.buyingParty.help}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 170 }}\r\n                  placeholder=\"Yourself\"\r\n                  name=\"buyingParty\"\r\n                  onChange={props.handleBuyer}\r\n                >\r\n                  {props.data.companyList.map(company => (\r\n                    <Option key={company} value={company}>\r\n                      {company}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Selling party:\"\r\n                validateStatus={props.data.sellingParty.valid}\r\n                help={props.data.sellingParty.help}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 170 }}\r\n                  placeholder=\"Them\"\r\n                  name=\"sellingParty\"\r\n                  onChange={props.handleSeller}\r\n                >\r\n                  {props.data.companyList.map(company => (\r\n                    <Option key={company} value={company}>\r\n                      {company}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <br />\r\n              <Form.Item label=\"Product / Stock:\" style={{ marginTop: 16 }}>\r\n                <Radio.Group\r\n                  buttonStyle=\"solid\"\r\n                  name=\"productStock\"\r\n                  onChange={props.handleNumber}\r\n                >\r\n                  <Radio.Button value=\"Product\" onClick={props.enableField}>\r\n                    Product\r\n                  </Radio.Button>\r\n                  <Radio.Button value=\"Stocks\" onClick={props.disableField}>\r\n                    Stock\r\n                  </Radio.Button>\r\n                </Radio.Group>\r\n              </Form.Item>\r\n              <br />\r\n              <Form.Item label=\"Product name: \" style={{ marginTop: 16 }}>\r\n                <Select\r\n                  disabled={props.data.disabled}\r\n                  showSearch\r\n                  style={{ width: 170 }}\r\n                  placeholder=\"Product name\"\r\n                  filterOption={(input, option) =>\r\n                    option.props.children\r\n                      .toLowerCase()\r\n                      .indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                  onChange={props.handleDropdown}\r\n                >\r\n                  {props.data.productList.map(product => (\r\n                    <Option key={product} value={product}>\r\n                      {product}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Quantity: \"\r\n                style={{ marginTop: 16 }}\r\n                validateStatus={props.data.quantity.valid}\r\n                help={props.data.quantity.help}\r\n              >\r\n                <Input\r\n                  name=\"quantity\"\r\n                  // value={props.data.quantity.value}\r\n                  onChange={props.handleNumber}\r\n                  style={{ width: 170 }}\r\n                />\r\n              </Form.Item>\r\n              <br />\r\n              <Form.Item label=\"Notional currency: \" style={{ marginTop: 16 }}>\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 170 }}\r\n                  placeholder=\"Currency\"\r\n                  onChange={props.handleNotional}\r\n                >\r\n                  {props.data.currencyList.map(currency => (\r\n                    <Option key={currency} value={currency}>\r\n                      {currency}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Underlying currency: \"\r\n                style={{ marginTop: 16 }}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 170 }}\r\n                  placeholder=\"Currency\"\r\n                  onChange={props.handleUnderlying}\r\n                >\r\n                  {props.data.currencyList.map(currency => (\r\n                    <Option key={currency} value={currency}>\r\n                      {currency}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n              <br />\r\n              <Row around=\"xs\">\r\n                <section style={{ textAlign: \"left\" }}>\r\n                  <Form.Item\r\n                    label=\"Strike Price: \"\r\n                    style={{ marginTop: 16 }}\r\n                    validateStatus={props.data.strikePrice.valid}\r\n                    help={props.data.strikePrice.help}\r\n                  >\r\n                    <Input\r\n                      style={{ width: 140 }}\r\n                      name=\"strikePrice\"\r\n                      value={props.data.strikePrice.value}\r\n                      onChange={props.handleNumber}\r\n                    />\r\n                    <span className=\"ant-form-text\">\r\n                      {\" \"}\r\n                      {props.data.notionalCurrency.value.toUpperCase()}\r\n                    </span>\r\n                  </Form.Item>\r\n                  <br />\r\n                  <Form.Item label=\"Market value: \">\r\n                    <span className=\"ant-form-text\">\r\n                      {\" \"}\r\n                      {\r\n                        props.data.verifiedData.marketValue // should come from api after Verify button is clicked\r\n                      }{\" \"}\r\n                      {props.data.underlyingCurrency.value.toUpperCase()}\r\n                    </span>\r\n                  </Form.Item>\r\n                  <br />\r\n                  <Form.Item label=\"Notional value: \">\r\n                    <span className=\"ant-form-text\">\r\n                      {\" \"}\r\n                      {\r\n                        props.data.verifiedData.notionalValue // should come from api after Verify button is clicked\r\n                      }{\" \"}\r\n                      {props.data.notionalCurrency.value.toUpperCase()}\r\n                    </span>\r\n                  </Form.Item>\r\n                  <br />\r\n                  <Form.Item label=\"Current price: \">\r\n                    <span className=\"ant-form-text\">\r\n                      {\" \"}\r\n                      {\r\n                        props.data.verifiedData.currentValue // should come from api after Verify button is clicked\r\n                      }{\" \"}\r\n                      {props.data.underlyingCurrency.value.toUpperCase()}\r\n                    </span>\r\n                  </Form.Item>\r\n                </section>\r\n              </Row>\r\n              <Divider />\r\n              <Form.Item name=\"date-picker\" label=\"Expiry date:\">\r\n                <DatePicker\r\n                  onChange={props.handleExpirydate}\r\n                  disabledDate={disabledDate}\r\n                />\r\n              </Form.Item>\r\n              <br />\r\n              <Button\r\n                type=\"primary\"\r\n                ghost\r\n                onClick={props.handleVerify}\r\n                style={{ marginTop: 16 }}\r\n                disabled={!formCompleted}\r\n              >\r\n                Verify\r\n              </Button>\r\n              <Divider />\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  disabled={!props.data.isVerified}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n                <Popconfirm\r\n                  title=\"Are you sure you want to cancel?\"\r\n                  onConfirm={props.handleCancel}\r\n                  okText=\"Yes\"\r\n                  cancelText=\"No\"\r\n                >\r\n                  <Button style={{ marginLeft: 8 }}>Cancel</Button>\r\n                </Popconfirm>\r\n              </Form.Item>\r\n            </Form>\r\n          </Row>\r\n        </section>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default EdittradeComponent;\r\n"]},"metadata":{},"sourceType":"module"}