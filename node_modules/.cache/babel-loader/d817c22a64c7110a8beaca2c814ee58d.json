{"ast":null,"code":"import \"antd/es/drawer/style\";\nimport _Drawer from \"antd/es/drawer\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"C:\\\\Users\\\\hgaff\\\\OneDrive\\\\Documents\\\\derivativesnew\\\\src\\\\dashboard.js\";\nimport React from \"react\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport Dashchart from \"./components/dashchart\";\nvar Option = _Select.Option;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      visible: false,\n      dataType: \"\",\n      productlist: [\"Car\", \"Oil\", \"Gun\", \"Gold\"],\n      stocklist: [\"Tesla\", \"Apple\", \"eBay\", \"Alibaba\"],\n      currencylist: [\"KYD\", \"USD\", \"GBP\"],\n      options: \"\"\n    };\n\n    _this.showDrawer = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.onClose = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.onChange = function (e) {\n      console.log(\"user has selected to display a \".concat(e.target.value));\n      var options = _this.state.options;\n\n      if (e.target.value == \"product\") {\n        options = _this.state.productlist.map(function (product) {\n          return React.createElement(Option, {\n            key: product,\n            value: product,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, product);\n        });\n\n        _this.setState({\n          options: options\n        });\n      } else if (e.target.value == \"stock\") {\n        options = _this.state.stocklist.map(function (stock) {\n          return React.createElement(Option, {\n            key: stock,\n            value: stock,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, stock);\n        });\n\n        _this.setState({\n          options: options\n        });\n      } else {\n        options = _this.state.currencylist.map(function (currency) {\n          return React.createElement(Option, {\n            key: currency,\n            value: currency,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, currency);\n        });\n\n        _this.setState({\n          options: options\n        });\n      }\n\n      _this.setState({\n        dataType: e.target.value,\n        placeholder: \"Please select \".concat(e.target.value)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        sm: 2,\n        lg: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          marginLeft: 20,\n          marginTop: 20,\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Data\"), React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.showDrawer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Select data\"), React.createElement(_Drawer, {\n        title: \"Data\",\n        placement: \"left\",\n        onClose: this.onClose,\n        visible: this.state.visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(_Radio.Group, {\n        buttonStyle: \"solid\",\n        name: \"productstockcurrency\",\n        size: \"small\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(_Radio.Button, {\n        value: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Product\"), React.createElement(_Radio.Button, {\n        value: \"stock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(_Radio.Button, {\n        value: \"currency\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Currency\")), React.createElement(_Select, {\n        mode: \"multiple\",\n        style: {\n          marginTop: 8,\n          width: \"100%\"\n        },\n        placeholder: this.state.placeholder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.options))), React.createElement(Col, {\n        xs: 12,\n        sm: 8,\n        lg: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          marginLeft: 80,\n          marginTop: 20,\n          textAlign: \"left\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"TSLA / AAPL\"), React.createElement(Dashchart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: 12,\n        sm: 2,\n        lg: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        style: {\n          marginTop: 20\n        },\n        size: \"large\",\n        type: \"primary\",\n        href: \"/addtrade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Add trade\"))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/hgaff/OneDrive/Documents/derivativesnew/src/dashboard.js"],"names":["React","Row","Col","Dashchart","Option","Dashboard","state","visible","dataType","productlist","stocklist","currencylist","options","showDrawer","setState","onClose","onChange","e","console","log","target","value","map","product","stock","currency","placeholder","textAlign","marginLeft","marginTop","width","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Drawer, Radio, Select } from \"antd\";\r\nimport { Row, Col } from \"react-flexbox-grid\";\r\nimport Dashchart from \"./components/dashchart\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass Dashboard extends React.Component {\r\n  state = {\r\n    visible: false,\r\n    dataType: \"\",\r\n    productlist: [\"Car\", \"Oil\", \"Gun\", \"Gold\"],\r\n    stocklist: [\"Tesla\", \"Apple\", \"eBay\", \"Alibaba\"],\r\n    currencylist: [\"KYD\", \"USD\", \"GBP\"],\r\n    options: \"\"\r\n  };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    console.log(`user has selected to display a ${e.target.value}`);\r\n    var options = this.state.options;\r\n    if (e.target.value == \"product\") {\r\n      options = this.state.productlist.map(product => (\r\n        <Option key={product} value={product}>\r\n          {product}\r\n        </Option>\r\n      ));\r\n      this.setState({\r\n        options: options\r\n      });\r\n    } else if (e.target.value == \"stock\") {\r\n      options = this.state.stocklist.map(stock => (\r\n        <Option key={stock} value={stock}>\r\n          {stock}\r\n        </Option>\r\n      ));\r\n      this.setState({\r\n        options: options\r\n      });\r\n    } else {\r\n      options = this.state.currencylist.map(currency => (\r\n        <Option key={currency} value={currency}>\r\n          {currency}\r\n        </Option>\r\n      ));\r\n      this.setState({\r\n        options: options\r\n      });\r\n    }\r\n    this.setState({\r\n      dataType: e.target.value,\r\n      placeholder: `Please select ${e.target.value}`\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section style={{ textAlign: \"center\" }}>\r\n        <Row>\r\n          <Col xs={12} sm={2} lg={2}>\r\n            <h2 style={{ marginLeft: 20, marginTop: 20, textAlign: \"left\" }}>\r\n              Data\r\n            </h2>\r\n            <Button type=\"primary\" onClick={this.showDrawer}>\r\n              Select data\r\n            </Button>\r\n            <Drawer\r\n              title=\"Data\"\r\n              placement=\"left\"\r\n              onClose={this.onClose}\r\n              visible={this.state.visible}\r\n            >\r\n              <Radio.Group\r\n                buttonStyle=\"solid\"\r\n                name=\"productstockcurrency\"\r\n                size=\"small\"\r\n                onChange={this.onChange}\r\n              >\r\n                <Radio.Button value=\"product\">Product</Radio.Button>\r\n                <Radio.Button value=\"stock\">Stock</Radio.Button>\r\n                <Radio.Button value=\"currency\">Currency</Radio.Button>\r\n              </Radio.Group>\r\n              <Select\r\n                mode=\"multiple\"\r\n                style={{ marginTop: 8, width: \"100%\" }}\r\n                placeholder={this.state.placeholder}\r\n              >\r\n                {this.state.options}\r\n              </Select>\r\n            </Drawer>\r\n          </Col>\r\n          <Col xs={12} sm={8} lg={8}>\r\n            <h2 style={{ marginLeft: 80, marginTop: 20, textAlign: \"left\" }}>\r\n              TSLA / AAPL\r\n            </h2>\r\n            <Dashchart />\r\n          </Col>\r\n          <Col xs={12} sm={2} lg={2}>\r\n            <Button\r\n              style={{ marginTop: 20 }}\r\n              size=\"large\"\r\n              type=\"primary\"\r\n              href=\"/addtrade\"\r\n            >\r\n              Add trade\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}