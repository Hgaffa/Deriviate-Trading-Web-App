{"version":3,"sources":["components/alertlist.js","components/notifications.js","header.js","components/addtradeComponent.js","components/addtrade.js","components/dashchart.js","dashboard.js","components/portfoliochart.js","portfolio.js","reports.js","404.js","serviceWorker.js","index.js"],"names":["errorTrades","Alertlist","map","trade","style","marginTop","message","type","showIcon","React","Component","formatter","value","Notifications","state","visible","showModal","e","stopPropagation","setState","handleOk","console","log","handleCancel","onClick","this","marginRight","dot","size","title","onOk","onCancel","footer","step","marks","0","25","50","75","100","tipFormatter","Header","theme","defaultSelectedKeys","mode","Item","key","to","float","Option","onFinish","values","preventDefault","disabledDate","current","valueOf","Date","now","AddtradeComponent","props","isDisabled","data","buyingParty","valid","sellingParty","quantity","strikePrice","isFilled","length","underlyingCurrency","notionalCurrency","productStock","expiryDate","expiryTime","isProduct","productName","formCompleted","textAlign","marginLeft","around","layout","onSubmit","label","validateStatus","help","showSearch","width","placeholder","name","onChange","handleBuyer","companylist","company","handleSeller","Group","buttonStyle","handleNumber","Button","enableField","disableField","disabled","filterOption","input","option","children","toLowerCase","indexOf","handleDropdown","productlist","product","handleNotional","currencylist","currency","handleUnderlying","className","toUpperCase","handleExpirydate","handleExpirytime","ghost","handleVerify","htmlType","Addtrade","event","target","validator","helpMsg","Number","prevState","v","val","d","ds","date","AAPL","TSLA","amt","Dashchart","height","margin","top","right","left","bottom","strokeDasharray","dataKey","padding","stroke","Dashboard","background","href","colours","Portfoliochart","nameKey","cx","cy","innerRadius","outerRadius","paddingAngle","entry","index","fill","dataSource","tradeid","buyer","seller","columns","dataIndex","Portfolio","xs","RangePicker","dateString","file","render","text","record","Reports","Notfound","status","subTitle","extra","Boolean","window","location","hostname","match","routing","exact","path","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"waAGMA,EAAc,CAAC,SAAU,UAkBhBC,E,iLAdX,OACE,6BACGD,EAAYE,KAAI,SAAAC,GAAK,OACpB,uBACEC,MAAO,CAAEC,UAAW,GACpBC,QAAO,mCAA8BH,EAA9B,KACPI,KAAK,UACLC,UAAQ,Y,GATIC,IAAMC,WCD9B,SAASC,EAAUC,GACjB,MAAM,GAAN,OAAUA,EAAV,K,IA8DaC,E,2MA1DbC,MAAQ,CAAEC,SAAS,G,EAEnBC,UAAY,SAAAC,GACVA,EAAEC,kBACF,EAAKC,SAAS,CACZJ,SAAS,K,EAIbK,SAAW,SAAAH,GACTI,QAAQC,IAAIL,GACZA,EAAEC,kBACF,EAAKC,SAAS,CACZJ,SAAS,K,EAIbQ,aAAe,SAAAN,GACbI,QAAQC,IAAIL,GACZA,EAAEC,kBACF,EAAKC,SAAS,CACZJ,SAAS,K,wEAKX,OACE,yBAAKS,QAASC,KAAKT,WACjB,0BAAMZ,MAAO,CAAEsB,YAAa,KAA5B,gBACA,uBAAOC,KAAG,GACR,uBAAMC,KAAM,GAAIrB,KAAK,UAEvB,uBACEsB,MAAM,gBACNd,QAASU,KAAKX,MAAMC,QACpBe,KAAML,KAAKL,SACXW,SAAUN,KAAKF,aACfS,OAAQ,MAER,kBAAC,EAAD,MACA,4BACA,qDACA,uBACEC,KAAM,KACNC,MAAO,CACLC,EAAG,KACHC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,IAAK,QAEPC,aAAc7B,U,GApDEF,IAAMC,WC0BnB+B,EA7BA,kBACb,oCACE,uBACEC,MAAM,QACNC,oBAAqB,CAAC,KACtBC,KAAK,cAEL,sBAAMC,KAAN,CAAWC,IAAI,KACb,uBAAMvC,KAAK,SACX,2CACA,kBAAC,IAAD,CAAMwC,GAAG,OAEX,sBAAMF,KAAN,CAAWC,IAAI,KACb,uBAAMvC,KAAK,cACX,2CACA,kBAAC,IAAD,CAAMwC,GAAG,gBAEX,sBAAMF,KAAN,CAAWC,IAAI,KACb,uBAAMvC,KAAK,gBACX,yCACA,kBAAC,IAAD,CAAMwC,GAAG,cAEX,sBAAMF,KAAN,CAAWzC,MAAO,CAAE4C,MAAO,SAAWF,IAAI,KACxC,kBAAC,EAAD,U,kJCdAG,G,WAAAA,QACFC,EAAW,SAAAC,GACfA,EAAOC,iBACP/B,QAAQC,IAAI,wBAAyB6B,IAGvC,SAASE,EAAaC,GACpB,OAAOA,GAAWA,EAAQC,UAAYC,KAAKC,MA8O9BC,MA3Of,SAA2BC,GACzB,IAAIC,EAC8B,SAAhCD,EAAME,KAAKC,YAAYC,OACU,SAAjCJ,EAAME,KAAKG,aAAaD,OACK,SAA7BJ,EAAME,KAAKI,SAASF,OACY,SAAhCJ,EAAME,KAAKK,YAAYH,MACrBI,EACFR,EAAME,KAAKC,YAAYlD,MAAMwD,OAAS,GACtCT,EAAME,KAAKG,aAAapD,MAAMwD,OAAS,GACvCT,EAAME,KAAKI,SAASrD,MAAQ,GAC5B+C,EAAME,KAAKK,YAAYtD,MAAQ,GAC/B+C,EAAME,KAAKQ,mBAAmBzD,MAAMwD,OAAS,GAC7CT,EAAME,KAAKS,iBAAiB1D,MAAMwD,OAAS,GAC3CT,EAAME,KAAKU,aAAa3D,MAAMwD,OAAS,GACvCT,EAAME,KAAKW,WAAW5D,MAAMwD,OAAS,GACrCT,EAAME,KAAKY,WAAW7D,MAAMwD,OAAS,EACnCM,EACgC,WAAjCf,EAAME,KAAKU,aAAa3D,OACvB+C,EAAME,KAAKc,YAAY/D,MAAMwD,OAAS,GACP,SAAjCT,EAAME,KAAKU,aAAa3D,MACtBgE,IAAiBhB,IAAcO,IAAYO,GAe/C,OAdsB,IAAlBE,IAEFvD,QAAQC,IAAI,8BACZD,QAAQC,IAAR,wBAA6BqC,EAAME,KAAKC,YAAYlD,QACpDS,QAAQC,IAAR,yBAA8BqC,EAAME,KAAKG,aAAapD,QACtDS,QAAQC,IAAR,yBAA8BqC,EAAME,KAAKU,aAAa3D,QACtDS,QAAQC,IAAR,wBAA6BqC,EAAME,KAAKc,YAAY/D,QACpDS,QAAQC,IAAR,oBAAyBqC,EAAME,KAAKI,SAASrD,QAC7CS,QAAQC,IAAR,+BAAoCqC,EAAME,KAAKQ,mBAAmBzD,QAClES,QAAQC,IAAR,6BAAkCqC,EAAME,KAAKS,iBAAiB1D,QAC9DS,QAAQC,IAAR,wBAA6BqC,EAAME,KAAKK,YAAYtD,QACpDS,QAAQC,IAAR,uBAA4BqC,EAAME,KAAKW,WAAW5D,QAClDS,QAAQC,IAAR,uBAA4BqC,EAAME,KAAKY,WAAW7D,SAGlD,oCACE,6BAASR,MAAO,CAAEyE,UAAW,SAAUxE,UAAW,GAAIyE,WAAY,KAChE,wBAAI1E,MAAO,CAAEyE,UAAW,WAAxB,iBACA,kBAAC,MAAD,CAAKE,OAAO,MACV,uBAAMC,OAAO,SAAS5E,MAAO,CAAEC,UAAW,IAAM4E,SAAU/B,GACxD,sBAAML,KAAN,CACEqC,MAAM,gBACNC,eAAgBxB,EAAME,KAAKC,YAAYC,MACvCqB,KAAMzB,EAAME,KAAKC,YAAYsB,MAE7B,uBACEC,YAAU,EACVjF,MAAO,CAAEkF,MAAO,KAChBC,YAAY,WACZC,KAAK,cACLC,SAAU9B,EAAM+B,aAEf/B,EAAME,KAAK8B,YAAYzF,KAAI,SAAA0F,GAAO,OACjC,kBAAC3C,EAAD,CAAQH,IAAK8C,EAAShF,MAAOgF,GAC1BA,QAKT,sBAAM/C,KAAN,CACEqC,MAAM,iBACNC,eAAgBxB,EAAME,KAAKG,aAAaD,MACxCqB,KAAMzB,EAAME,KAAKG,aAAaoB,MAE9B,uBACEC,YAAU,EACVjF,MAAO,CAAEkF,MAAO,KAChBC,YAAY,OACZC,KAAK,eACLC,SAAU9B,EAAMkC,cAEflC,EAAME,KAAK8B,YAAYzF,KAAI,SAAA0F,GAAO,OACjC,kBAAC3C,EAAD,CAAQH,IAAK8C,EAAShF,MAAOgF,GAC1BA,QAKT,6BACA,sBAAM/C,KAAN,CAAWqC,MAAM,mBAAmB9E,MAAO,CAAEC,UAAW,KACtD,sBAAOyF,MAAP,CACEC,YAAY,QACZP,KAAK,eACLC,SAAU9B,EAAMqC,cAEhB,sBAAOC,OAAP,CAAcrF,MAAM,UAAUY,QAASmC,EAAMuC,aAA7C,WAGA,sBAAOD,OAAP,CAAcrF,MAAM,QAAQY,QAASmC,EAAMwC,cAA3C,WAKJ,6BACA,sBAAMtD,KAAN,CAAWqC,MAAM,iBAAiB9E,MAAO,CAAEC,UAAW,KACpD,uBACE+F,SAAUzC,EAAME,KAAKuC,SACrBf,YAAU,EACVjF,MAAO,CAAEkF,MAAO,KAChBC,YAAY,eACZc,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAO5C,MAAM6C,SACVC,cACAC,QAAQJ,EAAMG,gBAAkB,GAErChB,SAAU9B,EAAMgD,gBAEfhD,EAAME,KAAK+C,YAAY1G,KAAI,SAAA2G,GAAO,OACjC,kBAAC5D,EAAD,CAAQH,IAAK+D,EAASjG,MAAOiG,GAC1BA,QAKT,sBAAMhE,KAAN,CACEqC,MAAM,aACN9E,MAAO,CAAEC,UAAW,IACpB8E,eAAgBxB,EAAME,KAAKI,SAASF,MACpCqB,KAAMzB,EAAME,KAAKI,SAASmB,MAE1B,uBACEI,KAAK,WAELC,SAAU9B,EAAMqC,aAChB5F,MAAO,CAAEkF,MAAO,QAGpB,6BACA,sBAAMzC,KAAN,CAAWqC,MAAM,sBAAsB9E,MAAO,CAAEC,UAAW,KACzD,uBACEgF,YAAU,EACVjF,MAAO,CAAEkF,MAAO,KAChBC,YAAY,WACZE,SAAU9B,EAAMmD,gBAEfnD,EAAME,KAAKkD,aAAa7G,KAAI,SAAA8G,GAAQ,OACnC,kBAAC/D,EAAD,CAAQH,IAAKkE,EAAUpG,MAAOoG,GAC3BA,QAKT,sBAAMnE,KAAN,CAAWqC,MAAM,wBAAwB9E,MAAO,CAAEC,UAAW,KAC3D,uBACEgF,YAAU,EACVjF,MAAO,CAAEkF,MAAO,KAChBC,YAAY,WACZE,SAAU9B,EAAMsD,kBAEftD,EAAME,KAAKkD,aAAa7G,KAAI,SAAA8G,GAAQ,OACnC,kBAAC/D,EAAD,CAAQH,IAAKkE,EAAUpG,MAAOoG,GAC3BA,QAKT,6BACA,kBAAC,MAAD,CAAKjC,OAAO,MACV,6BAAS3E,MAAO,CAAEyE,UAAW,SAC3B,sBAAMhC,KAAN,CACEqC,MAAM,iBACN9E,MAAO,CAAEC,UAAW,IACpB8E,eAAgBxB,EAAME,KAAKK,YAAYH,MACvCqB,KAAMzB,EAAME,KAAKK,YAAYkB,MAE7B,uBACEhF,MAAO,CAAEkF,MAAO,KAChBE,KAAK,cACL5E,MAAO+C,EAAME,KAAKK,YAAYtD,MAC9B6E,SAAU9B,EAAMqC,eAElB,0BAAMkB,UAAU,iBACb,IACAvD,EAAME,KAAKS,iBAAiB1D,MAAMuG,gBAGvC,6BACA,sBAAMtE,KAAN,CAAWqC,MAAM,kBACf,0BAAMgC,UAAU,iBACb,IAECvD,EAAME,KAAKK,YAAYtD,MACvB,IACD+C,EAAME,KAAKQ,mBAAmBzD,MAAMuG,gBAGzC,6BACA,sBAAMtE,KAAN,CAAWqC,MAAM,oBACf,0BAAMgC,UAAU,iBACb,IAECvD,EAAME,KAAKK,YAAYtD,MACvB,IACD+C,EAAME,KAAKS,iBAAiB1D,MAAMuG,kBAK3C,4BACA,sBAAMtE,KAAN,CAAW2C,KAAK,cAAcN,MAAM,gBAClC,uBACEO,SAAU9B,EAAMyD,iBAChB/D,aAAcA,KAGlB,sBAAMR,KAAN,CAAW2C,KAAK,cAAcN,MAAM,gBAClC,uBAAYO,SAAU9B,EAAM0D,oBAE9B,6BACA,uBACE9G,KAAK,UACL+G,OAAK,EACL9F,QAASmC,EAAM4D,aACfnH,MAAO,CAAEC,UAAW,KAJtB,UAQA,4BACA,sBAAMwC,KAAN,KACE,uBACEtC,KAAK,UACLiH,SAAS,SACTpB,UAAWxB,GAHb,OAOA,uBAAQxE,MAAO,CAAE0E,WAAY,IAA7B,gBCjDC2C,E,2MAtMb3G,MAAQ,CACNsF,UAAU,EACVtC,YAAa,CACXlD,MAAO,GACPmD,MAAO,GACPqB,KAAM,IAERpB,aAAc,CACZpD,MAAO,GACPmD,MAAO,GACPqB,KAAM,IAERb,aAAc,CACZ3D,MAAO,GACPmD,MAAO,GACPqB,KAAM,IAERT,YAAa,CACX/D,MAAO,IAETqD,SAAU,CACRrD,MAAO,GACPmD,MAAO,GACPqB,KAAM,IAERd,iBAAkB,CAChB1D,MAAO,IAETyD,mBAAoB,CAClBzD,MAAO,IAETsD,YAAa,CACXtD,MAAO,GACPmD,MAAO,GACPqB,KAAM,IAERZ,WAAY,CACV5D,MAAO,IAET6D,WAAY,CACV7D,MAAO,IAETmG,aAAc,CAAC,MAAO,MAAO,OAC7BpB,YAAa,CAAC,QAAS,QAAS,OAAQ,WACxCiB,YAAa,CAAC,MAAO,MAAO,MAAO,S,EAGrCV,YAAc,WACZ,EAAK/E,SAAS,CACZiF,UAAU,K,EAIdD,aAAe,WACb,EAAKhF,SAAS,CACZiF,UAAU,K,EAGdJ,aAAe,SAAA0B,GACbA,EAAMtE,iBADgB,MAEEsE,EAAMC,OAAtBnC,EAFc,EAEdA,KAAM5E,EAFQ,EAERA,MACVgH,EAAY,aACZC,EAAU,GACdxG,QAAQC,IAAR,mBAAwBkE,EAAxB,mBAAuC5E,IAC1B,aAAT4E,GAAgC,gBAATA,KACpBsC,OAAOlH,GAAoB,KAAVA,GAAiBkH,OAAOlH,GAAS,KACrDgH,EAAY,QACZC,EACW,aAATrC,EACI,yBACA,8BAGV,EAAKrE,UAAS,SAAA4G,GAAS,sBAElBA,EAFkB,eAGpBvC,EAAO,CACN5E,MAAOA,EACPmD,MAAO6D,EACPxC,KAAMyC,S,EAIZnC,YAAc,SAAA9E,GACZ,IAAIgH,EAAY,GACZC,EAAU,GACdxG,QAAQC,IAAR,sBACiBV,EADjB,wBACsC,EAAKE,MAAMkD,aAAapD,QAE1DA,GAAS,EAAKE,MAAMkD,aAAapD,QACnCgH,EAAY,QACZC,EAAU,uBAEZ,EAAK1G,UAAS,SAAA4G,GAAS,sBAClBA,EADkB,CAErBjE,YAAa,CACXlD,MAAOA,EACPmD,MAAO6D,EACPxC,KAAMyC,S,EAIZhC,aAAe,SAAAjF,GACb,IAAIgH,EAAY,GACZC,EAAU,GACdxG,QAAQC,IAAR,sBACiBV,EADjB,wBACsC,EAAKE,MAAMgD,YAAYlD,QAEzDA,GAAS,EAAKE,MAAMgD,YAAYlD,QAClCgH,EAAY,QACZC,EAAU,wBAEZ,EAAK1G,UAAS,SAAA4G,GAAS,sBAClBA,EADkB,CAErB/D,aAAc,CACZpD,MAAOA,EACPmD,MAAO6D,EACPxC,KAAMyC,S,EAKZf,eAAiB,SAAAkB,GACf3G,QAAQC,IAAID,QAAQC,IAAR,4BAAiC0G,KAC7C,EAAK7G,UAAS,SAAA4G,GAAS,sBAClBA,EADkB,CAErBzD,iBAAkB,CAChB1D,MAAOoH,S,EAKbrB,eAAiB,SAAAsB,GACf,EAAK9G,UAAS,SAAA4G,GAAS,sBAClBA,EADkB,CAErBpD,YAAa,CACX/D,MAAOqH,S,EAKbhB,iBAAmB,SAAAe,GACjB3G,QAAQC,IAAID,QAAQC,IAAR,8BAAmC0G,KAC/C,EAAK7G,UAAS,SAAA4G,GAAS,sBAClBA,EADkB,CAErB1D,mBAAoB,CAClBzD,MAAOoH,EACPjE,MAAO,GACPqB,KAAM,U,EAKZgC,iBAAmB,SAACc,EAAGC,GACrB,EAAKhH,UAAS,SAAA4G,GAAS,sBAClBA,EADkB,CAErBvD,WAAY,CACV5D,MAAOuH,S,EAKbd,iBAAmB,SAACa,EAAGC,GACrB,EAAKhH,UAAS,SAAA4G,GAAS,sBAClBA,EADkB,CAErBtD,WAAY,CACV7D,MAAOuH,S,EAKbZ,aAAe,WAGK,EAAKzG,MAAMoD,YAAYtD,MAC1B,EAAKE,MAAMoD,YAAYtD,O,wEAKtC,OACE,kBAAC,EAAD,CACEkG,eAAgBrF,KAAKqF,eACrBd,aAAcvE,KAAKuE,aACnBN,YAAajE,KAAKiE,YAClBG,aAAcpE,KAAKoE,aACnBoB,iBAAkBxF,KAAKwF,iBACvBN,eAAgBlF,KAAKkF,eACrBS,iBAAkB3F,KAAK2F,iBACvBC,iBAAkB5F,KAAK4F,iBACvBE,aAAc9F,KAAK8F,aACnBrB,YAAazE,KAAKyE,YAClBC,aAAc1E,KAAK0E,aACnBtC,KAAMpC,KAAKX,Y,GAlMIL,IAAMC,W,0BCSvBmD,EAAO,CACX,CACEuE,KAAM,aACNC,KAAM,IACNC,KAAM,KACNC,IAAK,MAEP,CACEH,KAAM,aACNC,KAAM,IACNC,KAAM,KACNC,IAAK,MAEP,CACEH,KAAM,aACNC,KAAM,IACNC,KAAM,KACNC,IAAK,MAEP,CACEH,KAAM,aACNC,KAAM,KACNC,KAAM,KACNC,IAAK,KAEP,CACEH,KAAM,aACNC,KAAM,KACNC,KAAM,KACNC,IAAK,MAEP,CACEH,KAAM,aACNC,KAAM,KACNC,KAAM,KACNC,IAAK,MAEP,CACEH,KAAM,aACNC,KAAM,KACNC,KAAM,KACNC,IAAK,MAEP,CACEH,KAAM,aACNC,KAAM,KACNC,KAAM,IACNC,IAAK,MAEP,CACEH,KAAM,aACNC,KAAM,IACNC,KAAM,KACNC,IAAK,KAEP,CACEH,KAAM,aACNC,KAAM,IACNC,KAAM,KACNC,IAAK,MAEP,CACEH,KAAM,aACNC,KAAM,IACNC,KAAM,KACNC,IAAK,OA2BMC,E,iLArBX,OACE,kBAAC,IAAD,CAAqBlD,MAAM,MAAMmD,OAAQ,KACvC,kBAAC,IAAD,CAGE5E,KAAMA,EACN6E,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAE/C,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,OAAOC,QAAS,CAAEJ,KAAM,GAAID,MAAO,MAClD,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAMrI,KAAK,WAAWyI,QAAQ,OAAOE,OAAO,YAC5C,kBAAC,IAAD,CAAM3I,KAAK,WAAWyI,QAAQ,OAAOE,OAAO,kB,GAhB9BzI,IAAMC,WC5DfyI,EAhBG,kBAChB,oCACE,uBAAQ/I,MAAO,CAAEsI,OAAQ,GAAIU,WAAY,UACvC,kBAAC,MAAD,CAAKP,KAAK,MACN,wBAAIzI,MAAO,CAAE0E,WAAY,KAAzB,eACA,kBAAC,EAAD,MACF,kBAAC,MAAD,KACE,uBAAQlD,KAAK,QAAQrB,KAAK,UAAU8I,KAAK,aAAzC,kB,kBCJJxF,EAAO,CACX,CACE2B,KAAM,MACN5E,MAAO,MAET,CACE4E,KAAM,OACN5E,MAAO,MAET,CACE4E,KAAM,OACN5E,MAAO,MAET,CACE4E,KAAM,OACN5E,MAAO,OAIL0I,EAAU,CAAC,UAAW,UAAW,UAAW,WA2BnCC,E,iLAvBX,OACE,kBAAC,IAAD,CAAUjE,MAAO,IAAKmD,OAAQ,KAC5B,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE5E,KAAMA,EACNmF,QAAQ,QACRQ,QAAQ,OACRC,GAAG,MACHC,GAAG,MACHC,YAAa,GACbC,YAAa,GACbC,aAAc,EACd3E,OAAK,GAEJrB,EAAK3D,KAAI,SAAC4J,EAAOC,GAAR,OACR,kBAAC,IAAD,CAAMjH,IAAG,eAAUiH,GAASC,KAAMV,EAAQS,EAAQT,EAAQlF,mB,GAjBzC3D,IAAMC,WCxB7BuJ,EAAa,CACjB,CACEnH,IAAK,IACLoH,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRvD,QAAS,MACT5C,SAAU,IACVmE,KAAM,cAER,CACEtF,IAAK,IACLoH,QAAS,UACTC,MAAO,SACPC,OAAQ,SACRvD,QAAS,MACT5C,SAAU,IACVmE,KAAM,eAIJiC,EAAU,CACd,CACExI,MAAO,WACPyI,UAAW,UACXxH,IAAK,WAEP,CACEjB,MAAO,QACPyI,UAAW,QACXxH,IAAK,SAEP,CACEjB,MAAO,SACPyI,UAAW,SACXxH,IAAK,UAEP,CACEjB,MAAO,UACPyI,UAAW,UACXxH,IAAK,WAEP,CACEjB,MAAO,WACPyI,UAAW,WACXxH,IAAK,YAEP,CACEjB,MAAO,OACPyI,UAAW,OACXxH,IAAK,SAmBMyH,EAfG,kBAChB,oCACE,uBAAQnK,MAAO,CAAEsI,OAAQ,GAAIU,WAAY,UACvC,wBAAIhJ,MAAO,CAAEyE,UAAW,SAAxB,aACA,kBAAC,MAAD,CAAKgE,KAAK,MACV,kBAAC,MAAD,CAAK2B,IAAE,GACL,yDACA,kBAAC,EAAD,QAGF,uBAAOP,WAAYA,EAAYI,QAASA,OClEtCI,E,IAAAA,YAER,SAAShF,GAAS2C,EAAMsC,GACtBrJ,QAAQC,IAAIoJ,GAGd,IAAMT,GAAa,CACjB,CACEnH,IAAK,IACL6H,KAAM,kBAER,CACE7H,IAAK,IACL6H,KAAM,mBAIJN,GAAU,CACd,CACExI,MAAO,OACPyI,UAAW,OACXxH,IAAK,QAEP,CACEjB,MAAO,GACPiB,IAAK,UACLwC,MAAO,IACPsF,OAAQ,SAACC,EAAMC,GAAP,OACN,8BACE,uBAAGzB,KAAK,KACL,IACD,uBAAM9I,KAAK,aAFb,iBAoCOwK,GA3BC,kBACd,oCACE,uBAAQ3K,MAAO,CAAEsI,OAAQ,GAAIU,WAAY,UACvC,iCACE,iDACA,yEAC4C,IAC1C,uBAAQhJ,MAAO,CAAE0E,WAAY,GAAKvE,KAAK,WAAvC,YAGA,6BACA,6BANF,0CAO0C,IACxC,kBAACkK,EAAD,CAAarK,MAAO,CAAE0E,WAAY,GAAKW,SAAUA,KACjD,uBAAQrF,MAAO,CAAE0E,WAAY,GAAKvE,KAAK,WAAvC,cAKJ,6BAASH,MAAO,CAAEyE,UAAW,OAAQxE,UAAW,KAC9C,wBAAID,MAAO,CAAEyE,UAAW,SAAxB,iCAEF,uBAAOoF,WAAYA,GAAYI,QAASA,GAASzI,KAAK,c,mBC9C7CoJ,GAdE,kBACf,oCACE,wBACEC,OAAO,MACPpJ,MAAM,MACNqJ,SAAS,8CACTC,MACE,uBAAQ5K,KAAK,UAAU8I,KAAK,KAA5B,iBCEY+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCNN,IAAMC,GACJ,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzC,IAIjC,kBAAC,IAAD,CAAOwC,KAAK,aAAaC,UAAWzC,IACpC,kBAAC,IAAD,CAAOwC,KAAK,YAAYC,UAAWnE,IACnC,kBAAC,IAAD,CAAOkE,KAAK,aAAaC,UAAWrB,IACpC,kBAAC,IAAD,CAAOoB,KAAK,WAAWC,UAAWb,KAClC,kBAAC,IAAD,CAAOa,UAAWZ,QAM1Ba,IAASjB,OAAOa,GAASK,SAASC,eAAe,SDkG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.dfb8bccd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Alert } from \"antd\";\n\nconst errorTrades = [\"AGD896\", \"ADS888\"];\n\nclass Alertlist extends React.Component {\n  render() {\n    return (\n      <div>\n        {errorTrades.map(trade => (\n          <Alert\n            style={{ marginTop: 8 }}\n            message={`Error detected for trade ${trade}.`}\n            type=\"warning\"\n            showIcon\n          ></Alert>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Alertlist;\n","import React from \"react\";\nimport { Modal, Badge, Icon, Divider, Slider } from \"antd\";\nimport Alertlist from \"./alertlist\";\n\nfunction formatter(value) {\n  return `${value}%`;\n}\n\nclass Notifications extends React.Component {\n  state = { visible: false };\n\n  showModal = e => {\n    e.stopPropagation();\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleOk = e => {\n    console.log(e);\n    e.stopPropagation();\n    this.setState({\n      visible: false\n    });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    e.stopPropagation();\n    this.setState({\n      visible: false\n    });\n  };\n\n  render() {\n    return (\n      <div onClick={this.showModal}>\n        <span style={{ marginRight: 20 }}> My account </span>\n        <Badge dot>\n          <Icon size={32} type=\"bell\" />\n        </Badge>\n        <Modal\n          title=\"Notifications\"\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={null}\n        >\n          <Alertlist />\n          <Divider />\n          <h3>Detection sensitivity</h3>\n          <Slider\n            step={null}\n            marks={{\n              0: \"0%\",\n              25: \"25%\",\n              50: \"50%\",\n              75: \"75%\",\n              100: \"100%\"\n            }}\n            tipFormatter={formatter}\n          />\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default Notifications;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Icon } from \"antd\";\nimport Notifications from \"./components/notifications\";\n\nconst Header = () => (\n  <>\n    <Menu\n      theme=\"light\"\n      defaultSelectedKeys={[\"1\"]}\n      mode=\"horizontal\"\n    >\n      <Menu.Item key=\"1\">\n        <Icon type=\"fund\" />\n        <span>Dashboard</span>\n        <Link to=\"/\" />\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <Icon type=\"pie-chart\" />\n        <span>Portfolio</span>\n        <Link to=\"/portfolio\" />\n      </Menu.Item>\n      <Menu.Item key=\"3\">\n        <Icon type=\"file-search\" />\n        <span>Reports</span>\n        <Link to=\"/reports\" />\n      </Menu.Item>\n      <Menu.Item style={{ float: \"right\" }} key=\"4\" >\n        <Notifications />\n      </Menu.Item>\n    </Menu>\n  </>\n);\n\nexport default Header;\n","import React from \"react\";\r\nimport {\r\n  Divider,\r\n  Form,\r\n  Select,\r\n  Input,\r\n  DatePicker,\r\n  TimePicker,\r\n  Button,\r\n  Radio\r\n} from \"antd\";\r\nimport { Row } from \"react-flexbox-grid\";\r\nimport \"./addtrade.css\";\r\n\r\nconst { Option } = Select;\r\nconst onFinish = values => {\r\n  values.preventDefault();\r\n  console.log(\"form inputs recieved:\", values);\r\n};\r\n\r\nfunction disabledDate(current) {\r\n  return current && current.valueOf() < Date.now();\r\n}\r\n\r\nfunction AddtradeComponent(props) {\r\n  var isDisabled =\r\n    props.data.buyingParty.valid == \"error\" ||\r\n    props.data.sellingParty.valid == \"error\" ||\r\n    props.data.quantity.valid == \"error\" ||\r\n    props.data.strikePrice.valid == \"error\";\r\n  var isFilled =\r\n    props.data.buyingParty.value.length > 0 &&\r\n    props.data.sellingParty.value.length > 0 &&\r\n    props.data.quantity.value > 0 &&\r\n    props.data.strikePrice.value > 0 &&\r\n    props.data.underlyingCurrency.value.length > 0 &&\r\n    props.data.notionalCurrency.value.length > 0 &&\r\n    props.data.productStock.value.length > 0 &&\r\n    props.data.expiryDate.value.length > 0 &&\r\n    props.data.expiryTime.value.length > 0;\r\n  var isProduct =\r\n    (props.data.productStock.value == \"Product\" &&\r\n      props.data.productName.value.length > 0) ||\r\n    props.data.productStock.value == \"Stock\";\r\n  var formCompleted = !isDisabled && isFilled && isProduct ? true : false;\r\n  if (formCompleted === true) {\r\n    //This will log all of the form data to show that we have correctly saved form fields to state\r\n    console.log(\"THESE ARE THE FORM VALUES:\");\r\n    console.log(`Buying Party: ${props.data.buyingParty.value}`);\r\n    console.log(`Selling Party: ${props.data.sellingParty.value}`);\r\n    console.log(`Product/Stock: ${props.data.productStock.value}`);\r\n    console.log(`Product Name: ${props.data.productName.value}`);\r\n    console.log(`Quantity: ${props.data.quantity.value}`);\r\n    console.log(`Underlying Currency: ${props.data.underlyingCurrency.value}`);\r\n    console.log(`Notional Currency: ${props.data.notionalCurrency.value}`);\r\n    console.log(`Strike Price: ${props.data.strikePrice.value}`);\r\n    console.log(`Expiry Date: ${props.data.expiryDate.value}`);\r\n    console.log(`Expiry Time: ${props.data.expiryTime.value}`);\r\n  }\r\n  return (\r\n    <>\r\n      <section style={{ textAlign: \"center\", marginTop: 16, marginLeft: 20 }}>\r\n        <h1 style={{ textAlign: \"center\" }}>Add new trade</h1>\r\n        <Row around=\"xs\">\r\n          <Form layout=\"inline\" style={{ marginTop: 16 }} onSubmit={onFinish}>\r\n            <Form.Item\r\n              label=\"Buying party:\"\r\n              validateStatus={props.data.buyingParty.valid}\r\n              help={props.data.buyingParty.help}\r\n            >\r\n              <Select\r\n                showSearch\r\n                style={{ width: 170 }}\r\n                placeholder=\"Yourself\"\r\n                name=\"buyingParty\"\r\n                onChange={props.handleBuyer}\r\n              >\r\n                {props.data.companylist.map(company => (\r\n                  <Option key={company} value={company}>\r\n                    {company}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Selling party:\"\r\n              validateStatus={props.data.sellingParty.valid}\r\n              help={props.data.sellingParty.help}\r\n            >\r\n              <Select\r\n                showSearch\r\n                style={{ width: 170 }}\r\n                placeholder=\"Them\"\r\n                name=\"sellingParty\"\r\n                onChange={props.handleSeller}\r\n              >\r\n                {props.data.companylist.map(company => (\r\n                  <Option key={company} value={company}>\r\n                    {company}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <br />\r\n            <Form.Item label=\"Product / Stock:\" style={{ marginTop: 16 }}>\r\n              <Radio.Group\r\n                buttonStyle=\"solid\"\r\n                name=\"productStock\"\r\n                onChange={props.handleNumber}\r\n              >\r\n                <Radio.Button value=\"Product\" onClick={props.enableField}>\r\n                  Product\r\n                </Radio.Button>\r\n                <Radio.Button value=\"Stock\" onClick={props.disableField}>\r\n                  Stock\r\n                </Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <br />\r\n            <Form.Item label=\"Product name: \" style={{ marginTop: 16 }}>\r\n              <Select\r\n                disabled={props.data.disabled}\r\n                showSearch\r\n                style={{ width: 170 }}\r\n                placeholder=\"Product name\"\r\n                filterOption={(input, option) =>\r\n                  option.props.children\r\n                    .toLowerCase()\r\n                    .indexOf(input.toLowerCase()) >= 0\r\n                }\r\n                onChange={props.handleDropdown}\r\n              >\r\n                {props.data.productlist.map(product => (\r\n                  <Option key={product} value={product}>\r\n                    {product}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"Quantity: \"\r\n              style={{ marginTop: 16 }}\r\n              validateStatus={props.data.quantity.valid}\r\n              help={props.data.quantity.help}\r\n            >\r\n              <Input\r\n                name=\"quantity\"\r\n                // value={props.data.quantity.value}\r\n                onChange={props.handleNumber}\r\n                style={{ width: 170 }}\r\n              />\r\n            </Form.Item>\r\n            <br />\r\n            <Form.Item label=\"Notional currency: \" style={{ marginTop: 16 }}>\r\n              <Select\r\n                showSearch\r\n                style={{ width: 170 }}\r\n                placeholder=\"Currency\"\r\n                onChange={props.handleNotional}\r\n              >\r\n                {props.data.currencylist.map(currency => (\r\n                  <Option key={currency} value={currency}>\r\n                    {currency}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item label=\"Underlying currency: \" style={{ marginTop: 16 }}>\r\n              <Select\r\n                showSearch\r\n                style={{ width: 170 }}\r\n                placeholder=\"Currency\"\r\n                onChange={props.handleUnderlying}\r\n              >\r\n                {props.data.currencylist.map(currency => (\r\n                  <Option key={currency} value={currency}>\r\n                    {currency}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <br />\r\n            <Row around=\"xs\">\r\n              <section style={{ textAlign: \"left\" }}>\r\n                <Form.Item\r\n                  label=\"Strike Price: \"\r\n                  style={{ marginTop: 16 }}\r\n                  validateStatus={props.data.strikePrice.valid}\r\n                  help={props.data.strikePrice.help}\r\n                >\r\n                  <Input\r\n                    style={{ width: 140 }}\r\n                    name=\"strikePrice\"\r\n                    value={props.data.strikePrice.value}\r\n                    onChange={props.handleNumber}\r\n                  />\r\n                  <span className=\"ant-form-text\">\r\n                    {\" \"}\r\n                    {props.data.notionalCurrency.value.toUpperCase()}\r\n                  </span>\r\n                </Form.Item>\r\n                <br />\r\n                <Form.Item label=\"Market value: \">\r\n                  <span className=\"ant-form-text\">\r\n                    {\" \"}\r\n                    {\r\n                      props.data.strikePrice.value // should come from api after Verify button is clicked\r\n                    }{\" \"}\r\n                    {props.data.underlyingCurrency.value.toUpperCase()}\r\n                  </span>\r\n                </Form.Item>\r\n                <br />\r\n                <Form.Item label=\"Notional value: \">\r\n                  <span className=\"ant-form-text\">\r\n                    {\" \"}\r\n                    {\r\n                      props.data.strikePrice.value // should come from api after Verify button is clicked\r\n                    }{\" \"}\r\n                    {props.data.notionalCurrency.value.toUpperCase()}\r\n                  </span>\r\n                </Form.Item>\r\n              </section>\r\n            </Row>\r\n            <Divider />\r\n            <Form.Item name=\"date-picker\" label=\"Expiry date:\">\r\n              <DatePicker\r\n                onChange={props.handleExpirydate}\r\n                disabledDate={disabledDate}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item name=\"time-picker\" label=\"Expiry time:\">\r\n              <TimePicker onChange={props.handleExpirytime} />\r\n            </Form.Item>\r\n            <br />\r\n            <Button\r\n              type=\"primary\"\r\n              ghost\r\n              onClick={props.handleVerify}\r\n              style={{ marginTop: 16 }}\r\n            >\r\n              Verify\r\n            </Button>\r\n            <Divider />\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                disabled={!formCompleted}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button style={{ marginLeft: 8 }}>Cancel</Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Row>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\nexport default AddtradeComponent;\r\n","import React from \"react\";\r\nimport AddtradeComponent from \"./addtradeComponent\";\r\n\r\nclass Addtrade extends React.Component {\r\n  state = {\r\n    disabled: false,\r\n    buyingParty: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    sellingParty: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    productStock: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    productName: {\r\n      value: \"\"\r\n    },\r\n    quantity: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    notionalCurrency: {\r\n      value: \"\"\r\n    },\r\n    underlyingCurrency: {\r\n      value: \"\"\r\n    },\r\n    strikePrice: {\r\n      value: \"\",\r\n      valid: \"\",\r\n      help: \"\"\r\n    },\r\n    expiryDate: {\r\n      value: \"\"\r\n    },\r\n    expiryTime: {\r\n      value: \"\"\r\n    },\r\n    currencylist: [\"KYD\", \"USD\", \"GBP\"],\r\n    companylist: [\"Tesla\", \"Apple\", \"eBay\", \"Alibaba\"],\r\n    productlist: [\"Car\", \"Oil\", \"Gun\", \"Gold\"]\r\n  };\r\n\r\n  enableField = () => {\r\n    this.setState({\r\n      disabled: false\r\n    });\r\n  };\r\n\r\n  disableField = () => {\r\n    this.setState({\r\n      disabled: true\r\n    });\r\n  };\r\n  handleNumber = event => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    var validator = \"validating\";\r\n    var helpMsg = \"\";\r\n    console.log(`handling ${name} set to ${value}`);\r\n    if (name === \"quantity\" || name === \"strikePrice\") {\r\n      if (!Number(value) & (value !== \"\") || Number(value) < 0) {\r\n        validator = \"error\";\r\n        helpMsg =\r\n          name === \"quantity\"\r\n            ? \"Enter a valid quantity\"\r\n            : \"Enter a valid strike price\";\r\n      }\r\n    }\r\n    this.setState(prevState => ({\r\n      // must take into account previous state as is an object with changing properties\r\n      ...prevState, //Spread notation means to copy all same properties of previous states object \"errors\"\r\n      [name]: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n  handleBuyer = value => {\r\n    var validator = \"\";\r\n    var helpMsg = \"\";\r\n    console.log(\r\n      `Checking if ${value} is equal to ${this.state.sellingParty.value}`\r\n    );\r\n    if (value == this.state.sellingParty.value) {\r\n      validator = \"error\";\r\n      helpMsg = \"Enter a valid buyer\";\r\n    }\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      buyingParty: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n  handleSeller = value => {\r\n    var validator = \"\";\r\n    var helpMsg = \"\";\r\n    console.log(\r\n      `Checking if ${value} is equal to ${this.state.buyingParty.value}`\r\n    );\r\n    if (value == this.state.buyingParty.value) {\r\n      validator = \"error\";\r\n      helpMsg = \"Enter a valid seller\";\r\n    }\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      sellingParty: {\r\n        value: value,\r\n        valid: validator,\r\n        help: helpMsg\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleNotional = v => {\r\n    console.log(console.log(`selected notional ${v}`));\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      notionalCurrency: {\r\n        value: v\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleDropdown = val => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      productName: {\r\n        value: val\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleUnderlying = v => {\r\n    console.log(console.log(`selected underlying ${v}`));\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      underlyingCurrency: {\r\n        value: v,\r\n        valid: \"\",\r\n        help: \"\"\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleExpirydate = (d, ds) => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      expiryDate: {\r\n        value: ds\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleExpirytime = (d, ds) => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      expiryTime: {\r\n        value: ds\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleVerify = () => {\r\n    // market value = strike price * quantity in underlying currency\r\n    // notional value = current currency price * quantity in underlying currency\r\n    var strikeprice = this.state.strikePrice.value;\r\n    var quantity = this.state.strikePrice.value;\r\n    // send these to API \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AddtradeComponent\r\n        handleNotional={this.handleNotional}\r\n        handleNumber={this.handleNumber}\r\n        handleBuyer={this.handleBuyer}\r\n        handleSeller={this.handleSeller}\r\n        handleUnderlying={this.handleUnderlying}\r\n        handleDropdown={this.handleDropdown}\r\n        handleExpirydate={this.handleExpirydate}\r\n        handleExpirytime={this.handleExpirytime}\r\n        handleVerify={this.handleVerify}\r\n        enableField={this.enableField}\r\n        disableField={this.disableField}\r\n        data={this.state}\r\n      />\r\n    );\r\n  }\r\n}\r\nexport default Addtrade;\r\n","import React from \"react\";\nimport {\n  Line,\n  LineChart,\n  Tooltip,\n  CartesianGrid,\n  Legend,\n  XAxis,\n  YAxis,\n  ResponsiveContainer\n} from \"recharts\";\n\nconst data = [\n  {\n    date: \"2020-02-17\",\n    AAPL: 4000,\n    TSLA: 2400,\n    amt: 2400\n  },\n  {\n    date: \"2020-02-18\",\n    AAPL: 3000,\n    TSLA: 1398,\n    amt: 2210\n  },\n  {\n    date: \"2020-02-19\",\n    AAPL: 2000,\n    TSLA: 9800,\n    amt: 2290\n  },\n  {\n    date: \"2020-02-20\",\n    AAPL: 2780,\n    TSLA: 3908,\n    amt: 2000\n  },\n  {\n    date: \"2020-02-21\",\n    AAPL: 1890,\n    TSLA: 4800,\n    amt: 2181\n  },\n  {\n    date: \"2020-02-22\",\n    AAPL: 2390,\n    TSLA: 3800,\n    amt: 2500\n  },\n  {\n    date: \"2020-02-23\",\n    AAPL: 3490,\n    TSLA: 4300,\n    amt: 2100\n  },\n  {\n    date: \"2020-02-24\",\n    AAPL: 4400,\n    TSLA: 5000,\n    amt: 2700\n  },\n  {\n    date: \"2020-02-25\",\n    AAPL: 5000,\n    TSLA: 7600,\n    amt: 2000\n  },\n  {\n    date: \"2020-02-26\",\n    AAPL: 6000,\n    TSLA: 2500,\n    amt: 2540\n  },\n  {\n    date: \"2020-02-27\",\n    AAPL: 8000,\n    TSLA: 2600,\n    amt: 2220\n  }\n];\n\nclass Dashchart extends React.Component {\n  render() {\n    return (\n      <ResponsiveContainer width=\"80%\" height={300}>\n        <LineChart\n          // // width={730}\n          // height={250}\n          data={data}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" padding={{ left: 30, right: 30 }} />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"TSLA\" stroke=\"#006fff\" />\n          <Line type=\"monotone\" dataKey=\"AAPL\" stroke=\"#1bd962\" />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n\nexport default Dashchart;\n//ReactDOM.render(<Dashchart />, mountNode);\n","import React from \"react\";\nimport { Layout, Button } from \"antd\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport Dashchart from \"./components/dashchart\";\n\nconst Dashboard = () => (\n  <>\n    <Layout style={{ margin: 20, background: \"white\" }}>\n      <Row left=\"xs\">\n          <h2 style={{ marginLeft: 80 }}>TSLA / AAPL</h2>\n          <Dashchart />\n        <Col >\n          <Button size=\"large\" type=\"primary\" href=\"/addtrade\">\n            Add trade\n          </Button>\n        </Col>\n      </Row>\n    </Layout>\n  </>\n);\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n  Pie,\n  PieChart,\n  Cell,\n  Tooltip,\n} from \"recharts\";\n\nconst data = [\n  {\n    name: \"AMD\",\n    value: 2400\n  },\n  {\n    name: \"NVDA\",\n    value: 4567\n  },\n  {\n    name: \"EBAY\",\n    value: 1398\n  },\n  {\n    name: \"AAPL\",\n    value: 7800\n  },\n];\n\nconst colours = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n\nclass Portfoliochart extends React.Component {\n  render() {\n    return (\n      <PieChart width={280} height={280}>\n        <Tooltip />\n        <Pie\n          data={data}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          innerRadius={60}\n          outerRadius={80}\n          paddingAngle={5}\n          label\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={colours[index % colours.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default Portfoliochart;\n","import React from \"react\";\nimport { Layout, Table } from \"antd\";\nimport { Row, Col } from \"react-flexbox-grid\";\nimport PortfolioChart from \"./components/portfoliochart\";\n\nconst dataSource = [\n  {\n    key: \"1\",\n    tradeid: 18561026,\n    buyer: \"AHG150\",\n    seller: \"889GJK\",\n    product: \"Car\",\n    quantity: 599,\n    date: \"2020-02-01\"\n  },\n  {\n    key: \"2\",\n    tradeid: 689118260,\n    buyer: \"AHG650\",\n    seller: \"829GJK\",\n    product: \"Oil\",\n    quantity: 112,\n    date: \"2020-02-02\"\n  }\n];\n\nconst columns = [\n  {\n    title: \"Trade ID\",\n    dataIndex: \"tradeid\",\n    key: \"tradeid\"\n  },\n  {\n    title: \"Buyer\",\n    dataIndex: \"buyer\",\n    key: \"buyer\"\n  },\n  {\n    title: \"Seller\",\n    dataIndex: \"seller\",\n    key: \"seller\"\n  },\n  {\n    title: \"Product\",\n    dataIndex: \"product\",\n    key: \"product\"\n  },\n  {\n    title: \"Quantity\",\n    dataIndex: \"quantity\",\n    key: \"quantity\"\n  },\n  {\n    title: \"Date\",\n    dataIndex: \"date\",\n    key: \"date\"\n  }\n];\n\nconst Portfolio = () => (\n  <>\n    <Layout style={{ margin: 20, background: \"white\" }}>\n      <h1 style={{ textAlign: \"left\" }}>Portfolio</h1>\n      <Row left=\"xs\">\n      <Col xs>\n        <h1>Best performing products:</h1>\n        <PortfolioChart />\n      </Col>\n      </Row>\n      <Table dataSource={dataSource} columns={columns} />\n    </Layout>\n  </>\n);\n\nexport default Portfolio;\n","import React from \"react\";\nimport { Layout, Table, Icon, Button, DatePicker } from \"antd\";\n\nconst { RangePicker } = DatePicker;\n\nfunction onChange(date, dateString) {\n  console.log(dateString);\n}\n\nconst dataSource = [\n  {\n    key: \"1\",\n    file: \"2020-01-09.csv\"\n  },\n  {\n    key: \"2\",\n    file: \"2020-01-08.csv\"\n  }\n];\n\nconst columns = [\n  {\n    title: \"File\",\n    dataIndex: \"file\",\n    key: \"file\"\n  },\n  {\n    title: \"\",\n    key: \"actions\",\n    width: 100,\n    render: (text, record) => (\n      <span>\n        <a href=\"/\">\n          {\" \"}\n          <Icon type=\"download\" /> Download\n        </a>\n      </span>\n    )\n  }\n];\n\nconst Reports = () => (\n  <>\n    <Layout style={{ margin: 20, background: \"white\" }}>\n      <section>\n        <h2>Generate reports:</h2>\n        <div>\n          Generate report of all trades made today:{\" \"}\n          <Button style={{ marginLeft: 8 }} type=\"primary\">\n            Generate\n          </Button>\n          <br />\n          <br />\n          Generate report between specific dates:{\" \"}\n          <RangePicker style={{ marginLeft: 8 }} onChange={onChange} />\n          <Button style={{ marginLeft: 8 }} type=\"primary\">\n            Generate\n          </Button>\n        </div>\n      </section>\n      <section style={{ textAlign: \"left\", marginTop: 20 }}>\n        <h1 style={{ textAlign: \"left\" }}>Previously Generated Reports</h1>\n      </section>\n      <Table dataSource={dataSource} columns={columns} size=\"middle\" />\n    </Layout>\n  </>\n);\n\nexport default Reports;\n","import React from \"react\";\nimport { Result, Button } from \"antd\";\n\nconst Notfound = () => (\n  <>\n    <Result\n      status=\"404\"\n      title=\"404\"\n      subTitle=\"Sorry, the page you visited does not exist.\"\n      extra={\n        <Button type=\"primary\" href=\"/\">\n          Back Home\n        </Button>\n      }\n    />\n  </>\n);\nexport default Notfound;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Header from \"./header\";\nimport Addtrade from \"./components/addtrade\";\nimport Dashboard from \"./dashboard\";\nimport Portfolio from \"./portfolio\";\nimport Reports from \"./reports\";\nimport Notfound from \"./404\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst routing = (\n  <Router>\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        {\n          // change this\n        }\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/addtrade\" component={Addtrade} />\n        <Route path=\"/portfolio\" component={Portfolio} />\n        <Route path=\"/reports\" component={Reports} />\n        <Route component={Notfound} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}